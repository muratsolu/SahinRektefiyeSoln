@model SahinRektefiyeSoln.Models.ViewModels.IsEmri.IsEmriSorgulaPageModel
@{
	ViewBag.Title = "IsEmirleri";
	Layout = "~/Views/Shared/_Layout.cshtml";
	decimal? ToplamTalepEdilenAdet = 0;
	decimal ToplamTeslimEdilenAdet = 0;
	int index = 1;
	IEnumerable<SahinRektefiyeSoln.Models.IsEmriAracTeslimLog> listisEmriAracTeslimLogs;
	bool SwAracInService = false;
}
<link href="~/Styles/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.js"></script>
<script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.flash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.print.min.js"></script>

<link href="~/Scripts/DatetimePicker/jquery.datetimepicker.css" rel="stylesheet" />
@Html.Action("SetPageHeader", "Admin", new { pageTitle = "İş Emirleri", pagePermission = "XXXXX" })
<style>
	.switch {
		position: relative;
		display: inline-block;
		width: 60px;
		height: 34px;
	}

		.switch input {
			opacity: 0;
			width: 0;
			height: 0;
		}

	.slider {
		position: absolute;
		cursor: pointer;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: #ccc;
		-webkit-transition: .4s;
		transition: .4s;
	}

		.slider:before {
			position: absolute;
			content: "";
			height: 26px;
			width: 26px;
			left: 4px;
			bottom: 4px;
			background-color: white;
			-webkit-transition: .4s;
			transition: .4s;
		}

	input:checked + .slider {
		background-color: #2196F3;
	}

	input:focus + .slider {
		box-shadow: 0 0 1px #2196F3;
	}

	input:checked + .slider:before {
		-webkit-transform: translateX(26px);
		-ms-transform: translateX(26px);
		transform: translateX(26px);
	}

	/* Rounded sliders */
	.slider.round {
		border-radius: 34px;
	}

		.slider.round:before {
			border-radius: 50%;
		}
</style>
@*<style>
		#tableIsEmirleri {
			font-family: tahoma;
		}
	</style>*@
<script>
	$(document).ready(function () {
		jQuery.fn.DataTable.ext.type.search.string = function (data) {
			var testd = !data ?
				'' :
				typeof data === 'string' ?
					data
						.replace(/i/g, 'İ')
						.replace(/ı/g, 'I') :
					data;
			return testd;
		};

		jQuery(document).ready(function () {
			'use strict';

			jQuery('#IsEmriBaslangicTarihi').datetimepicker(
				{
					 value: '@(Model.IsEmriBaslangicTarihi != null ? Model.IsEmriBaslangicTarihi.Value.Year +"/"+ Model.IsEmriBaslangicTarihi.Value.Month+"/"+ Model.IsEmriBaslangicTarihi.Value.Day +" "+ Model.IsEmriBaslangicTarihi.Value.Hour+":"+ Model.IsEmriBaslangicTarihi.Value.Minute+"\'" : null)'
				});
			jQuery('#IsEmriBitisTarihi').datetimepicker(
				{
					 value: '@(Model.IsEmriBitisTarihi != null ? Model.IsEmriBitisTarihi.Value.Year +"/"+ Model.IsEmriBitisTarihi.Value.Month+"/"+ Model.IsEmriBitisTarihi.Value.Day +" "+ Model.IsEmriBitisTarihi.Value.Hour+":"+ Model.IsEmriBitisTarihi.Value.Minute+"\'" : null)'
				});
			jQuery('#FaturaBaslangicTarihi').datetimepicker(
				{
					 value: '@(Model.FaturaBaslangicTarihi != null ? Model.FaturaBaslangicTarihi.Value.Year +"/"+ Model.FaturaBaslangicTarihi.Value.Month+"/"+ Model.FaturaBaslangicTarihi.Value.Day +" "+ Model.FaturaBaslangicTarihi.Value.Hour+":"+ Model.FaturaBaslangicTarihi.Value.Minute+"\'" : null)'
				});
			jQuery('#FaturaBitisTarihi').datetimepicker(
				{
					 value: '@(Model.FaturaBitisTarihi != null ? Model.FaturaBitisTarihi.Value.Year +"/"+ Model.FaturaBitisTarihi.Value.Month+"/"+ Model.FaturaBitisTarihi.Value.Day +" "+ Model.FaturaBitisTarihi.Value.Hour+":"+ Model.FaturaBitisTarihi.Value.Minute+"\'" : null)'
				});
        });

		jQuery.extend( jQuery.fn.dataTableExt.oSort, {
													  'locale-compare-asc': function ( a, b ) {
														 return a.localeCompare(b, 'cs', { sensitivity: 'case' })
													  },
													  'locale-compare-desc': function ( a, b ) {
														 return b.localeCompare(a, 'cs', { sensitivity: 'case' })
													  }
        })

		jQuery.fn.dataTable.ext.type.search['locale-compare'] = function (data) {
			return NeutralizeAccent(data);
        }

		function NeutralizeAccent(data)
			{
			  return !data
				  ? ''
					: typeof data === 'string'
					? data
					.replace(/\n/g, ' ')
					.replace(/[éÉěĚèêëÈÊË]/g, 'e')
					.replace(/[šŠ]/g, 's')
					.replace(/[čČ]/g, 'c')
					.replace(/[řŘ]/g, 'r')
					.replace(/[žŽ]/g, 'z')
					.replace(/[ýÝ]/g, 'y')
					.replace(/[áÁâàÂÀ]/g, 'a')
					.replace(/[íÍîïÎÏ]/g, 'i')
					.replace(/[ťŤ]/g, 't')
					.replace(/[ďĎ]/g, 'd')
					.replace(/[ňŇ]/g, 'n')
					.replace(/[óÓ]/g, 'o')
					.replace(/[úÚůŮ]/g, 'u')
					: data
        }


		var table = $('#tableIsEmirleri').DataTable({
			//"stateSave": true,
			"processing": true,
			"filter": true,
			"language": {
				"sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
				"oPaginate": { "sFirst": "İlk", "sLast": "Son", "sNext": "İleri", "sPrevious": "Geri" },
				"select": { "rows": { "_": "%d kayıt seçildi", "0": "", "1": "1 kayıt seçildi" } },
				"sSearch": "",
				"selectAll": "Tümünü Seç",
				"sSearchPlaceholder": "Filtrele",
				"sLengthMenu": "_MENU_",
				"sLoadingRecords": "Yükleniyor...",
				"sProcessing": "İşleniyor...",
				"sZeroRecords": "Eşleşen kayıt bulunamadı...",
				"sInfo": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar.",
				"sInfoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
				"sInfoEmpty": "Kayıt Yok",
				"sInfoPostFix": "",
				"sInfoThousands": ".",
				"sDecimal": ","
			},
			dom: 'Bfrtip',
			buttons: [
				'excelHtml5',
				'pdfHtml5',
				{
					text: 'Banko Satış',
					action: function (e, dt, node, config) {
						window.location.href = "@Url.Action("BankoSatis","IsEmri")";
					}
				}
			],
			"order": [[1, "desc"]],
			//"order": [],
            "scrollX": true,
			columnDefs : [
							 { targets: 0, type: 'locale-compare' },
						  ]
		});

		var btns = $('.dt-buttons')[0];

		btns.firstElementChild.className = "w3-btn w3-blue w3-round";
		btns.firstElementChild.textContent = "Excel'e Aktar";

		btns.firstElementChild.nextElementSibling.className = "w3-btn w3-blue w3-round";
		btns.firstElementChild.nextElementSibling.textContent = "Pdf'e Aktar";

		var isBankoYetkisi = '@ViewBag.BankoSatisYetkisi';
		btns.firstElementChild.nextElementSibling.nextElementSibling.className = "w3-btn w3-blue w3-round " + (isBankoYetkisi == 'True' ? "" : "w3-hide");

		$('.isEmriStatuleri').change(function () {
			//debugger;
			//console.log('isEmriStatuleri change');

			//var SadeceServistekileriGetir = $('#SwAracInServisOrAll').val();
			//console.log(SadeceServistekileriGetir);

			//if (SadeceServistekileriGetir == "true") {

			//	$('.isEmriDurumlari').each(function (index) {
			//		console.log(index + ": " + $(this).val());
			//	});


			//	alert('Sadece servistekileri getirmek için iş emri durumu seçiniz!');
			//	return true;
			//} else {
			//	alert('devam edebilir.!');
				$("#btnAra").trigger("click");

			//}


		});

		//$('#tableIsEmirleri_filter input').keyup(function () {
		//	table
		//		.search(
		//		jQuery.fn.DataTable.ext.type.search.string(this.value)
		//		)
		//		.draw();
		//});

		$("input[type='search']").keyup(function () {
			table.search(
					  jQuery.fn.dataTable.ext.type.search.string(NeutralizeAccent(this.value))
					)
					.draw()

		});
		//$('#tableIsEmirleri').on('page.dt', function () {
		//	debugger;
		//	var info = table.page.info();

		//	var selectedPage = info.page*1;

		//	console.log(selectedPage+1);


		//});

		//var tableIsEmirleriSelectedPage = getCookie("tableIsEmirleriSelectedPage");

		//if (tableIsEmirleriSelectedPage == '') { // Boş ise Cookie Set Et
		//	document.cookie = "tableIsEmirleriSelectedPage=1";
		//}
		//else {
		//	// Cokkie dolu ise Açık ise açtır kapalı ise kaptır.
		//	debugger;
		//	table.fnPageChange(2, true);
		//	//if (tableIsEmirleriSelectedPage == "1") {
		//	//	setCookie('tableIsEmirleriSelectedPage', 1, 1);
		//	//}
		//	//else
		//	//{
		//	//	closeNav();
		//	//}
		//}

	});
	//function AutoCalculateWarrantyOnChange(element) {
	//	console.log('AutoCalculateWarrantyOnChange');
	//	element.checked ? $('#SwAracInServisOrAll').val(true) : $('#SwAracInServisOrAll').val(false);
	//}

	//function setCookie(cname, cvalue, exdays) {
	//	var d = new Date();
	//	d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
	//	var expires = "expires=" + d.toUTCString();
	//	document.cookie = cname + "=" + cvalue + ";" + expires + ";";
	//}

	//function getCookie(cname) {
	//	var name = cname + "=";
	//	var decodedCookie = decodeURIComponent(document.cookie);
	//	var ca = decodedCookie.split(';');
	//	for (var i = 0; i < ca.length; i++) {
	//		var c = ca[i];
	//		while (c.charAt(0) == ' ') {
	//			c = c.substring(1);
	//		}
	//		if (c.indexOf(name) == 0) {
	//			return c.substring(name.length, c.length);
	//		}
	//	}
	//	return "";
	//}

</script>
<div class="w3-panel">
	<div class="w3-row-padding w3-card ">
		<div class="w3-margin-top">
			<div class="w3-col m2 l2 ">
				<div class="w3-row w3-padding-left w3-padding-right">
					<a href="/IsEmri/IsEmriOlustur" class="w3-btn w3-blue w3-block w3-round">İş Emri Aç</a>
				</div>
				@using (Html.BeginForm())
				{
					@*<div class="w3-row w3-padding-lr-8">

							@Html.CheckBoxFor(model =>model.SwAracInServisOrAll , new { @class= "isEmriStatuleri", onchange = "AutoCalculateWarrantyOnChange(this)", value = Model.SwAracInServisOrAll })
							<label class="w3-small w3-center ">Sadece Servistekileri Getir</label>
						</div>*@
					<div class="w3-padding-lr-8">
						@Html.EditorFor(model => model.filter.Arac.Plaka, new { htmlAttributes = new { @class = "w3-input w3-border w3-round uppercase isEmriStatuleri", placeholder = "Plaka", autocomplete = "off" } })
					</div>
					<div class="w3-padding-lr-8">
						@Html.EditorFor(model => model.filter.FaturaNo, new { htmlAttributes = new { @class = "w3-input w3-border w3-round uppercase isEmriStatuleri", placeholder = "Fatura No", autocomplete = "off" } })
					</div>
					<div class="w3-padding-lr-8">
						<h6>İş Emri Durumu</h6>
						@{ int i = 0;

							foreach (var statu in Model.isEmriStatuleri)
							{
								//if (!(statu.Name.Contains("Onay")))
								//{
								@Html.HiddenFor(o => o.isEmriStatuleri[i].Name)
								@Html.HiddenFor(o => o.isEmriStatuleri[i].Id)
								@Html.CheckBoxFor(o => o.isEmriStatuleri[i].Value, new { @id = "Statu_" + i, @class = "w3-check isEmriStatuleri isEmriDurumlari" })
								<label>&nbsp; @statu.Name</label><br />
								i++;
								//}

							}

						}

					</div>
					<div class="w3-padding-lr-8">
						<h6>İş Emri Tipi</h6>
						@{ int j = 0;

							foreach (var tip in Model.isEmriTipleri)
							{
								@Html.HiddenFor(o => o.isEmriTipleri[j].Name)
								@Html.HiddenFor(o => o.isEmriTipleri[j].Id)
								@Html.CheckBoxFor(o => o.isEmriTipleri[j].Value, new { @id = "Tip_" + i, @class = "w3-check isEmriStatuleri" })
								<label>&nbsp; @tip.Name</label><br />
								j++;
							}

						}
					</div>
					<div class="w3-padding-lr-8">
						<div class="w3-row">
							<label>İş Emri Açılış Tarihi Başlangıç</label>
							@Html.EditorFor(model => model.IsEmriBaslangicTarihi, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", id = "IsEmriBaslangicTarihi", autocomplete = "off" } })
						</div>
						<div class="w3-row">
							<label>İş Emri Açılış Tarihi Bitiş</label>
							@Html.EditorFor(model => model.IsEmriBitisTarihi, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", id = "IsEmriBitisTarihi", autocomplete = "off" } })
						</div>
					</div>
					<div class="w3-padding-lr-8">
						<div class="w3-row">
							<label>Fatura Tarihi Başlangıç</label>
							@Html.EditorFor(model => model.FaturaBaslangicTarihi, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", id = "FaturaBaslangicTarihi", autocomplete = "off" } })
						</div>
						<div class="w3-row">
							<label>Fatura Tarihi Bitiş</label>
							@Html.EditorFor(model => model.FaturaBitisTarihi, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", id = "FaturaBitisTarihi", autocomplete = "off" } })
						</div>
					</div>
					<div class="w3-padding-lr-8">
						<button class="w3-blue w3-btn w3-block w3-round" type="submit" id="btnAra">Ara</button>
					</div>
				}
			</div>
			<div class="w3-col m10 l10">
				<div class="w3-padding-lr-8">
					<table id="tableIsEmirleri">
						<thead>
							<tr>
								@*<th class="w3-hide">adet</th>*@
								<th width="">#</th>
								<th width="">İş Emri No</th>

								@*<th width="">Fatura Tarihi</th>*@
								<th width="">Açılış Tarihi</th>
								<th width="">Servis</th>
								<th width="">Model</th>
								<th width="">Plaka</th>
								<th width="">Şase No</th>
								<th width="">Motor No</th>
								<th width="">Km</th>
								<th width="">Müşteri Adı</th>
								@*<th width="">Sorumlu Danışman</th>*@
								<th width="">İş Emri Durumu</th>
								<th width="">Statü Tarihi</th>
								<th width="">İş Emri Tipi</th>
								<th>Parça Durum</th>
								<th width="">Fatura Numarası</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var isEmri in Model.isEmirleri.OrderByDescending(x => x.CreatedDate))
							{
								<tr>
									@*<td  class="w3-hide">@index</td>*@
									<td>
										<a href="/IsEmri/IsEmriDuzenle?IsEmriId=@isEmri.IsEmriId" title="İş Emrini Görüntüle">
											<i class="fa fa-pencil-square-o w3-hover-opacity" aria-hidden="true"></i>
										</a>
									</td>
									<td>

										@(String.Format("{0:000000}", isEmri.IsEmriId))
									</td>

									@*<td></td>*@
									<td>@(isEmri.IsEmriTarihi != null ? isEmri.IsEmriTarihi.Value.ToShortDateString() : "")</td>
									<td class="w3-center">
										@{
											listisEmriAracTeslimLogs = null;
											listisEmriAracTeslimLogs = isEmri.IsEmriAracTeslimLog.OrderByDescending(x => x.IsEmriAracTeslimLogId).Take(1);

											if (!listisEmriAracTeslimLogs.Any())
											{
												SwAracInService = false;
											}
											else
											{
												SwAracInService = listisEmriAracTeslimLogs.First().SwAracInService;
											}

										}
										<input type="checkbox" disabled @(SwAracInService ? "checked" : "") />
										<label class="w3-show">@(SwAracInService ? "Serviste" : "")</label>
									</td>
									<td>@(isEmri.Arac?.Vehicles.Name)</td>
									<td>@(isEmri.Arac?.Plaka)</td>
									<td>@(isEmri.Arac?.SaseNo)</td>
									<td>@(isEmri.Arac?.MotorNo)</td>
									<td>@isEmri.Km</td>
									<td>@(isEmri.Musteri.MusteriTipi == "B" ? (isEmri.Musteri.MusteriAdi.ToString() + " " + isEmri.Musteri.MusteriSoyadi.ToString()) : isEmri.Musteri.KurumAdi.ToString())</td>
									@*<td>@isEmri.Danismanlar.Adi @isEmri.Danismanlar.Soyadi</td>*@
									<td>
										<label class="">@isEmri.IsEmriStatu.Aciklamasi </label><br />
										@if (isEmri.IsEmriTeklifStatusu == 5)
										{
											<span class="w3-tag w3-teal w3-small" style="">Servis Bekliyor</span>
										}
										else if (isEmri.IsEmriTeklifStatusu == 10)
										{
											<span class="w3-tag w3-teal w3-small" style="">Gönderilmedi</span>
										}
										else if (isEmri.IsEmriTeklifStatusu == 20)
										{
											<span class="w3-tag w3-blue w3-small"><i class="fa fa-clock-o" aria-hidden="true"></i> İletildi</span>
										}
										else if (isEmri.IsEmriTeklifStatusu == 30)
										{
											<span class="w3-tag w3-green w3-small"><i class="fa fa-check-circle" aria-hidden="true"></i> Onaylandı</span>
										}
										else if (isEmri.IsEmriTeklifStatusu == 35)
										{
											<span class="w3-tag w3-green w3-small"><i class="fa fa-check-circle" aria-hidden="true"></i> Islemde</span>
										}
										else if (isEmri.IsEmriTeklifStatusu == 40)
										{
											<span class="w3-tag w3-green w3-small"><i class="fa fa-check-circle" aria-hidden="true"></i>Tamamlandı</span>
										}

									</td>
									<td>
										@if (isEmri.IsEmriTeklifStatusu == 5)
										{
											<label>@isEmri.IsEmriTarihi</label>
										}
										else if (isEmri.IsEmriTeklifStatusu == 10)
										{
											<label>@isEmri.Dt_Teklif_Iletilmesi_Bekleniyor</label>
										}
										else if (isEmri.IsEmriTeklifStatusu == 20)
										{
											<label>@isEmri.Dt_Teklif_Iletildi</label>
										}
										else if (isEmri.IsEmriTeklifStatusu == 30)
										{
											<label>@isEmri.Dt_Teklif_Onaylandi</label>
										}
										else if (isEmri.IsEmriTeklifStatusu == 35)
										{
											<label>@isEmri.Dt_Islemde</label>
										}
										else if (isEmri.IsEmriTeklifStatusu == 40)
										{
											<label>@isEmri.Dt_Islem_Tamamlandi</label>
										}
									</td>
									<td>@isEmri.IsEmriTipleri.Aciklamasi</td>
									<td>
										@{
											ToplamTalepEdilenAdet = 0; ToplamTeslimEdilenAdet = 0;

											ToplamTalepEdilenAdet = isEmri.IsEmriKalemleri.Where(x => x.KalepTipi == "P").Select(x => x.BirimSaatAdet).Sum();
											ToplamTeslimEdilenAdet = isEmri.IsEmriKalemleri.Where(x => x.KalepTipi == "P").Select(x => x.TeslimEdilenMiktar).Sum();

										}

										@if (ToplamTalepEdilenAdet == ToplamTeslimEdilenAdet)
										{
											<span class="w3-tag w3-green w3-small" style="">Toplama Tamamlandı</span>
										}
										else if (Convert.ToInt32(ToplamTeslimEdilenAdet) == 0)
										{
											<span class="w3-tag w3-red w3-small" style="">Toplanmadı</span>
										}
										else if (ToplamTalepEdilenAdet > ToplamTeslimEdilenAdet)
										{
											<span class="w3-tag w3-teal w3-small" style="">Toplama Bekliyor</span>
										}

									</td>
									<td>@(isEmri.FaturaNo != null ? isEmri.FaturaNo.Replace("FTRRM", "") : "")<br />@(isEmri.FaturaTarihi != null ? isEmri.FaturaTarihi.Value.ToShortDateString() : "")</td>
								</tr>
								index += 1;
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>
<script src="~/Scripts/DatetimePicker/jquery.datetimepicker.full.min.js"></script>
@*<script src="~/Scripts/DatetimePicker/bootstrap-datetimepicker.tr.js"></script>*@
<style>
	::-webkit-scrollbar {
		width: 20px;
	}

	::-webkit-scrollbar-track {
		background-color: transparent;
	}

	::-webkit-scrollbar-thumb {
		background-color: #d6dee1;
		border-radius: 20px;
		border: 6px solid transparent;
		background-clip: content-box;
	}

		::-webkit-scrollbar-thumb:hover {
			background-color: #a8bbbf;
		}
</style>