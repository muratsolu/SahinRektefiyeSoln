@model SahinRektefiyeSoln.Models.Danismanlar
@{
	ViewBag.Title = "DanismanEkle";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@using Vereyon.Web;
@Html.Action("SetPageHeader", "Admin", new { pageTitle = "Danışman Ekleme Ekranı", pagePermission = "XXXXX" })
<link href="~/Styles/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui.js"></script>
<link href="~/Scripts/DatetimePicker/jquery.datetimepicker.css" rel="stylesheet" />
<link href="~/Styles/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui.js"></script>
<script>
	$(document).ready(function () {
		jQuery(document).ready(function () {
			'use strict';

			jQuery('#dtIseGirisTarihi').datetimepicker({
				timepicker: false,
				format: 'd.m.Y',
				scrollInput: false
			});

			jQuery('#dtIstenCikisTarihi').datetimepicker({
				timepicker: false,
				format: 'd.m.Y',
				scrollInput: false
			});
			$.datetimepicker.setLocale('tr');
		});

		$.widget("custom.combobox", {
			_create: function () {
				this.wrapper = $("<span>")
					//.addClass("custom-combobox")
					.css({ 'position': 'relative' })
					.css({ 'width': "auto!important" })
					.insertAfter(this.element);

				this.element.hide();
				this._createAutocomplete();
				this._createShowAllButton();
			},

			_createAutocomplete: function () {
				var selected = this.element.children(":selected"),
					value = selected.val() ? selected.text() : "";

				this.input = $("<input>")
					.appendTo(this.wrapper)
					.val(value)
					.attr("title", "")
					//.addClass("custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left")
					.addClass("w3-select w3-border w3-round w3-padding")
					.autocomplete({
						delay: 0,
						minLength: 0,
						source: $.proxy(this, "_source")
					})
					.tooltip({
						classes: {
							"ui-tooltip": "ui-state-highlight"
						}
					});

				this._on(this.input, {
					autocompleteselect: function (event, ui) {
						ui.item.option.selected = true;
						this._trigger("select", event, {
							item: ui.item.option
						});
					},

					autocompletechange: "_removeIfInvalid"
				});
			},

			_createShowAllButton: function () {
				var input = this.input,
					wasOpen = false;

				$("<a>")
					.attr("tabIndex", -1)
					.attr("title", "Tümünü Göster")
					.tooltip()
					.appendTo(this.wrapper)
					.button({
						icons: {
							primary: "ui-icon-triangle-1-s"
						},
						text: false
					})
					.css('margin-right', 3)
					.removeClass("ui-button ui-corner-all ui-widget ui-button-icon-only ")
					//.addClass("custom-combobox-toggle ui-corner-right")
					.addClass("w3-display-right")
					.on("mousedown", function () {
						wasOpen = input.autocomplete("widget").is(":visible");
					})
					.on("click", function () {
						input.trigger("focus");

						// Close if already visible
						if (wasOpen) {
							return;
						}

						// Pass empty string as value to search for, displaying all results
						input.autocomplete("search", "");
					});
			},

			_source: function (request, response) {
				var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
				var i = 0;
				response(this.element.children("option").map(function () {
					var text = $(this).text();
					if (this.value && (!request.term || matcher.test(text))) {
						i += 1;
						if (i <= 5) {
							return {
								label: text,
								value: text,
								option: this
							};
						}

					}

				}));
			},

			_removeIfInvalid: function (event, ui) {

				// Selected an item, nothing to do
				if (ui.item) {
					return;
				}

				// Search for a match (case-insensitive)
				var value = this.input.val(),
					valueLowerCase = value.toLowerCase(),
					valid = false;
				this.element.children("option").each(function () {
					if ($(this).text().toLowerCase() === valueLowerCase) {
						this.selected = valid = true;
						return false;
					}
				});

				// Found a match, nothing to do
				if (valid) {
					return;
				}

				// Remove invalid value
				this.input
					.val("")
					.attr("title", value + " seçilmedi.")
					.tooltip("open");
				this.element.val("");
				this._delay(function () {
					this.input.tooltip("close").attr("title", "");
				}, 2500);
				this.input.autocomplete("instance").term = "";
			},

			_destroy: function () {
				this.wrapper.remove();
				this.element.show();
			}
		});

		$("#userName").combobox({
			select: function (event, ui) {

				$('#userName').val(ui.item.value);
				$('#userName').trigger("change");
			}
		});

		$('#userName').change(function () {
			alert($("#userName").val());



		});
	});
</script>

<div class="w3-panel">
	<div class="w3-row-padding w3-card">
		<div class="w3-row w3-row-padding  w3-margin-top">
			@Html.RenderFlashMessages()
		</div>

		<div class="w3-bar w3-black">
			<button class="w3-bar-item w3-button" onclick="openCity('Danisman')">Danışman Ekle</button>
			<button class="w3-bar-item w3-button" onclick="openCity('Sofor')">Şöför Ekle</button>
		</div>
		<div id="Danisman" class="w3-container city">
			@using (Html.BeginForm())
			{

				<div class="w3-row">
					<div class="w3-quarter w3-padding">
						<label>Danışman Adı</label>
						@Html.EditorFor(model => model.Adi, new { htmlAttributes = new { @class = "w3-input w3-border w3-round uppercase", @required = "required", autocomplete = "off", maxlength = "56" } })
					</div>
					<div class="w3-quarter w3-padding">
						<label>Danışman Soyadı</label>
						@Html.EditorFor(model => model.Soyadi, new { htmlAttributes = new { @class = "w3-input w3-border w3-round uppercase", @required = "required", autocomplete = "off", maxlength = "56" } })
					</div>
					<div class="w3-quarter w3-padding">
						<label>Aktif </label><br />
						@Html.CheckBoxFor(model => model.SwAktif, new { @class = "w3-check" })
					</div>
					<div class="w3-quarter w3-padding">
						<label>Teknisyen?</label><br />
						@Html.CheckBoxFor(model => model.SwTeknisyen, new { @class = "w3-check" })
					</div>

				</div>
				<div class="w3-row">
					<div class="w3-quarter w3-padding">
						<label>İşe Girşi Tarihi</label>
						@Html.EditorFor(model => model.IseGirisTarihi, new { htmlAttributes = new { @class = "w3-select w3-border w3-round w3-padding dtIseGirisTarihi", id = "dtIseGirisTarihi", autocomplete = "off" } })
					</div>
					<div class="w3-quarter w3-padding">
						<label>İşten Çıkış Tarihi</label>
						@Html.EditorFor(model => model.IstenCikisTarihi, new { htmlAttributes = new { @class = "w3-select w3-border w3-round w3-padding dtIstenCikisTarihi", id = "dtIstenCikisTarihi", autocomplete = "off" } })
					</div>
				</div>
				<div class="w3-row">
					<div class="w3-quarter w3-padding-right w3-left">
						<a href="~/Service/Danismanlar" class=" w3-margin w3-green w3-btn w3-left w3-round">Geri</a>
					</div>
					<div class="w3-quarter w3-padding w3-right">
						<button type="submit" class=" w3-margin w3-green w3-btn w3-right w3-round">Ekle</button>
					</div>
				</div>
			}
		</div>

		<div id="Sofor" class="w3-container city" style="display:none">
			@using (Html.BeginForm())
			{
				<div class="w3-row">
					<div class="w3-quarter w3-padding">
						<label>Kullanıcı Adı</label>
						@Html.DropDownList("UserName", (SelectList)ViewBag.UserNames, htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "userName", @Name = "UserName" })
					</div>
				</div>
				<div class="w3-row">
					<div class="w3-quarter w3-padding-right w3-left">
						<a href="~/Service/Danismanlar" class=" w3-margin w3-green w3-btn w3-left w3-round">Geri</a>
					</div>
					<div class="w3-quarter w3-padding w3-right">
						<button type="submit" class=" w3-margin w3-green w3-btn w3-right w3-round" name="btnSubmit" value="Sofor">Ekle</button>
					</div>
				</div>
			}
		</div>

	</div>
</div>


<script src="~/Scripts/DatetimePicker/jquery.datetimepicker.full.min.js"></script>
<script src="~/Scripts/DatetimePicker/bootstrap-datetimepicker.tr.js"></script>


<script>
	function openCity(cityName) {
		var i;
		var x = document.getElementsByClassName("city");
		for (i = 0; i < x.length; i++) {
			x[i].style.display = "none";
		}
		document.getElementById(cityName).style.display = "block";
	}
</script>