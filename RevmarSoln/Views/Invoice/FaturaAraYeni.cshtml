@model SahinRektefiyeSoln.Models.ViewModels.Invoice.FaturaAraYeniViewModel
@{
	ViewBag.Title = "FaturaAraYeni";
	string IsEmriTipi = "";
	int FaturaTipi = 0;
	int FaturaStatu = 0;

	if (Model.filter != null)
	{
		IsEmriTipi = Model.filter.IsEmriTipi;
		FaturaTipi = Model.filter.FaturaTipi;
		FaturaStatu = Model.filter.FaturaStatu;
	}
}

@Html.Action("SetPageHeader", "Admin", new { pageTitle = "Fatura Arama Ekranı", pagePermission = "MHSB_001" })
<link href="~/Styles/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/Scripts/jquery.sortElements.js"></script>
<script src="~/Scripts/Table2Excel/jquery.table2excel.js"></script>

<style>
	.fontDuzgun {
		font-family: tahoma;
	}
</style>
<script>
	$(document).ready(function () {

		$('#GndrlnBsgTarih').datepicker({
			dateFormat: "dd-mm-yy",
			monthNames: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
			dayNamesMin: ["Pa", "Pt", "Sl", "Ça", "Pe", "Cu", "Ct"],
			firstDay: 1
		});

		$('#GndrlnBtsTarih').datepicker({
			dateFormat: "dd-mm-yy",
			monthNames: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
			dayNamesMin: ["Pa", "Pt", "Sl", "Ça", "Pe", "Cu", "Ct"],
			firstDay: 1
		});

		$('#BsgTarih').datepicker({
			dateFormat: "dd-mm-yy",
			monthNames: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
			dayNamesMin: ["Pa", "Pt", "Sl", "Ça", "Pe", "Cu", "Ct"],
			firstDay: 1
		});

		$('#BtsTarih').datepicker({
			dateFormat: "dd-mm-yy",
			monthNames: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
			dayNamesMin: ["Pa", "Pt", "Sl", "Ça", "Pe", "Cu", "Ct"],
			firstDay: 1
		});

		 $('#IsEmriTipi').val('@IsEmriTipi');
		 $('#FaturaTipi').val('@FaturaTipi');
		$('#FaturaStatu').val('@FaturaStatu');

		//$('.btnFaturaKes').click(function () {
		//	debugger;
		//	$('#FaturaMessage').html($(this).attr('displayIsEmri'));

		//	var FaturaTipi = $(this).attr('FaturaTipi');
		//	var FaturaId = $(this).attr('FaturaId');
		//	var IsEmriId = $(this).attr('IsEmriId')
		//	var IsEmriTipi = $(this).attr('IsEmriTipi');
		//	$('#mdlFaturaId').val(FaturaId);
		//	$('#mdlIsEmriId').val(IsEmriId);
		//	$('#mdlIsEmriTipi').val(IsEmriTipi);
		//	$('#ddlFaturaTipi').val(FaturaTipi);

		//	if (IsEmriTipi == "Irsaliye") {
		//		$("#male").prop("checked", true);
		//		$('#female').attr("disabled", "disabled");
		//		$('#divFaturaNo').removeClass("w3-hide").addClass("w3-show");
		//		$('#divFisNo').removeClass("w3-show").addClass("w3-hide");
		//	}
		//	else {
		//		$('#mdlFaturaNo').val('');

		//		if (FaturaTipi == "20") // Fiş kesilecek demektir.
		//		{

		//			$('#mdlFaturaNo').attr("disabled", "disabled");
		//			$('#btnFaturaFisOlustur').html('Fiş Oluştur');
		//			$('#lblFaturaFisNumarasi').html('Fiş Numarası');
		//			$('#fisMessage').removeClass('w3-hide').addClass('w3-show');

		//		}
		//		else // Normal Faturadır
		//		{
		//			$('#mdlFaturaNo').removeAttr("disabled");
		//			$('#btnFaturaFisOlustur').html('Fatura Oluştur');
		//			$('#lblFaturaFisNumarasi').html('Fatura Numarası');

		//			$('#fisMessage').removeClass('w3-show').addClass('w3-hide');
		//		}

		//	}

		//	document.getElementById('modalFatura').style.display = 'block';

		//	return false;

		//});


	});
</script>
<script type="text/javascript">
	function OnSuccess(data) {
		
		$('#mdlFaturaNo').attr("disabled", "disabled");
		$('#btnFaturaFisOlustur').attr("disabled", "disabled");

		if (data.result == true) {
			toastr.success(data.message, "İşlem Başarılı");

			$('#mdlFaturaNo').val(data.FaturaNo);

		}
		else {
			toastr.error(data.message, "İşlem Başarısız!");
		}

	}
	function OnFailure(data) {

		alert(data.result);

		alert(data.message);
	}
</script>

<div class="w3-panel">
	<div class="w3-row-padding w3-card">
		@using (Ajax.BeginForm("FaturaAraYeni", "Invoice", FormMethod.Post, new AjaxOptions { OnSuccess = "loadFatura" }))
		{
			<div class="w3-small">
				<div class="w3-right">
					<button class="w3-btn w3-ripple w3-white w3-left w3-round-large w3-right " name="command" type="submit" value="Excel" id="btnExcel"><i class="fa fa-file-excel-o" aria-hidden="true"></i> &nbsp; Excel'e Aktar</button>
				</div>
			</div>
			<div class="w3-row w3-small w3-padding-top">
				<div class="w3-half">
					<div class="w3-quarter w3-padding-right">
						<label>
							İş Emri Tipi
						</label>
						<select class="w3-select w3-border" name="IsEmriTipi" id="IsEmriTipi">
							<option value="">İş Emri Tipini Seçiniz</option>
							<option value="Gunluk">Günlük</option>
							<option value="Servis">Servis</option>
							<option value="Irsaliye">İrsaliye</option>
						</select>
					</div>
					<div class="w3-quarter w3-padding-right">
						<label>
							İş Emri No
						</label>
						@Html.TextBoxFor(model => Model.IsEmriNo, new { @class = "w3-input w3-border w3-round", autocomplete = "off", @Id = "IsEmriNo" })
					</div>
					<div class="w3-quarter w3-padding-right">
						<label>
							Plaka
						</label>
						@Html.TextBoxFor(model => Model.Plaka, new { @class = "w3-input w3-border w3-round", autocomplete = "off", @Id = "Plaka" })
					</div>
					<div class="w3-quarter w3-padding-right">
						<label>
							Fatura Tipi
						</label>
						<select class="w3-select w3-border" name="FaturaTipi" id="FaturaTipi">
							<option value="0">Fatura Durumunu Seçiniz</option>
							<option value="10">Normal Fatura</option>
							<option value="20">Açık Fatura</option>

						</select>
					</div>
				</div>
				<div class="w3-half">
					<div class="w3-third w3-padding-right">
						<label>Musteri</label>
						@Html.TextBoxFor(model => Model.Musteri, new { @class = "w3-input w3-border w3-round", autocomplete = "off", @Id = "Musteri", })
					</div>
					<div class="w3-twothird w3-padding-right">
						<label>
							Şasi
						</label>
						@Html.TextBoxFor(model => Model.Sasi, new { @class = "w3-input w3-border w3-round", autocomplete = "off", @Id = "Sasi", })
					</div>
				</div>
			</div>
			<div class="w3-row w3-small w3-padding-top">

				<div class="w3-half">
					<div class="w3-quarter w3-padding-right">
						<label>
							Başlangıç Tarihi
						</label>
						@Html.EditorFor(model => model.GndrlnBsgTarih, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", name = "date", id = "GndrlnBsgTarih", autocomplete = "off" } })
					</div>
					<div class="w3-quarter w3-padding-right">
						<label>
							Bitiş Tarihi
						</label>
						@Html.EditorFor(model => model.GndrlnBtsTarih, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", name = "date", id = "GndrlnBtsTarih", autocomplete = "off" } })
					</div>
					<div class="w3-quarter w3-padding-right">
						<label>
							Fatura Bsg Tarihi
						</label>
						@Html.EditorFor(model => model.BsgTarih, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", name = "date", id = "BsgTarih", autocomplete = "off" } })
					</div>
					<div class="w3-quarter w3-padding-right">
						<label>
							Fatura Btş Tarihi
						</label>
						@Html.EditorFor(model => model.BtsTarih, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", name = "date", id = "BtsTarih", autocomplete = "off" } })
					</div>
				</div>
				<div class="w3-half">
					<div class="w3-quarter w3-padding-right">
						<label>
							Fatura&Fiş No
						</label>
						@Html.TextBoxFor(model => Model.FaturaFisNo, new { @class = "w3-input w3-border w3-round", autocomplete = "off", @Id = "FaturaFisNo" })

					</div>
					<div class="w3-quarter w3-padding-right">
						<label>Fatura Durumu</label>
						<select class="w3-select w3-border" name="FaturaStatu" id="FaturaStatu">
							<option value="0">Fatura Durumunu Seçiniz</option>
							<option value="10">Bekliyor</option>
							<option value="20">Geri Gönderildi</option>
							<option value="50">Fatura Kesildi</option>
						</select>
					</div>
					<div class="w3-quarter w3-padding-right">
						<label>İş Emri Tipi</label>
						@Html.DropDownList("IsEmriTipId", (SelectList)ViewBag.IsEmriTipleri, "İş Emri Tipi", htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "IsEmriTipId" })
					</div>
					<div class="w3-quarter w3-right w3-padding-right">
						<br />
						<button class="w3-btn w3-ripple w3-blue w3-left w3-round w3-block" type="submit">Sorgula</button>
					</div>
				</div>
			</div>
		}
		<style>
			.switch {
				position: relative;
				display: inline-block;
				width: 60px;
				height: 34px;
			}

				.switch input {
					display: none;
				}

			.slider {
				position: absolute;
				cursor: pointer;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
				background-color: #ccc;
				-webkit-transition: .4s;
				transition: .4s;
			}

				.slider:before {
					position: absolute;
					content: "";
					height: 26px;
					width: 26px;
					left: 4px;
					bottom: 4px;
					background-color: white;
					-webkit-transition: .4s;
					transition: .4s;
				}

			input:checked + .slider {
				background-color: #2196F3;
			}

			input:focus + .slider {
				box-shadow: 0 0 1px #2196F3;
			}

			input:checked + .slider:before {
				-webkit-transform: translateX(26px);
				-ms-transform: translateX(26px);
				transform: translateX(26px);
			}

			/* Rounded sliders */
			.slider.round {
				border-radius: 34px;
			}

				.slider.round:before {
					border-radius: 50%;
				}
		</style>
		<div id="datatable-faturalar">
			@Html.Partial("_GridFatura", Model)
		</div>
	</div>
</div>





<script>
	function loadFatura(result) {
		
		
		if (result.FileGuid != undefined) {
			window.location = '/Invoice/Download?fileGuid=' + result.FileGuid + '&filename=' + result.FileName;
		}
		else
		{
			$('#datatable-faturalar').html(result);
		}

	}
</script>