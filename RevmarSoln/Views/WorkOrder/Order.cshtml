@model SahinRektefiyeSoln.Models.WorkOrders
@using SahinRektefiyeSoln.Models.HelperModels;
@{
	ViewBag.Title = "İş Emri Düzenle";
	Layout = "~/Views/Shared/_Layout.cshtml";
	double CsExWork = Model.SwExWorkShip == true ? (double)Model.CsExWorkShip : 0;
	double CsExWorkKDV = CsExWork * 18 / 100;


	List<FaturaKalemGunluk> faturaKalems = ViewBag.isEmriKalemleri;
	int kalemCounter = 1;
}
<script>
	function onPrintClick() {
        window.open(
		   "@Request.Url.GetLeftPart(UriPartial.Authority)/WorkOrder/WorkOrderPrint?WorkOrderId=@Model.WorkOrderId",
			'_blank' // <- This is what makes it open in a new window.
        );

	}

	function onDownloadDocument()
	{
		//window.open("@Request.Url.GetLeftPart(UriPartial.Authority)/WorkOrder/SaveOrderWordWithWord?OrderId=@Model.WorkOrderId");
		window.open("@Request.Url.GetLeftPart(UriPartial.Authority)/WorkOrder/SaveOrderWithWordv2?OrderId=@Model.WorkOrderId");


		//window.open("@Request.Url.GetLeftPart(UriPartial.Authority)/WorkOrder/PrintDeneme?OrderId=@Model.WorkOrderId"); // Deneme Sayfam

	}

	function onPdfExport() {
		window.open("@Request.Url.GetLeftPart(UriPartial.Authority)/WorkOrder/ExportPdf?OrderId=@Model.WorkOrderId");
	}
</script>
@Html.Action("SetPageHeader", "Admin", new { pageTitle = "İş Emri Oluştur", pagePermission = "EMP_02" })
<script>
	$(function () {
		debugger;
		var isReadOnly = '@ViewBag.IsReadOnly';

		$('#OrderStatu').val("@Model.Statu");

		var orderStatusu = "@Model.Statu";//$('#OrderStatu').val();

		var FaturaTipiStatusu = "@Model.FaturaTipi";


		$('#OrderFaturaTipi').val(FaturaTipiStatusu)
		//$('#OrderFaturaTipi option').filter(function () {
		//	return this.id === FaturaTipiStatusu
		//}).prop('selected', true);

		if (isReadOnly == 'True' || orderStatusu == "15" || orderStatusu == "20") {
			$('#btnUpdateWorkOrder').attr('disabled', 'disabled');
			$('#NoBill').attr('disabled', 'disabled');
			$('#SwApproved').attr('disabled', 'disabled');
			$('#SwExWorkShip0').attr('disabled', 'disabled');
			$('#SwExWorkShip1').attr('disabled', 'disabled');
			$('#CsExWorkShip').attr('disabled', 'disabled');
			$('#ChExWorkShip').attr('disabled', 'disabled');
			$('#btnUpdate').attr('disabled', 'disabled');

			$('#MuhasebeNotu').attr('disabled', 'disabled');
			$('#OrderFaturaTipi').attr('disabled', 'disabled');


			$('#btnTespitler').attr('disabled', 'disabled');
			$('#btnEklenenParcalar').attr('disabled', 'disabled');
			$('#btnEklenenfotograflar').attr('disabled', 'disabled');


		}






		if (orderStatusu == "15"||orderStatusu == "20"  || orderStatusu == "33" || orderStatusu == "34") { // Faturalandı ise Güncelle butonunu gösterme.
			$('#btnUpdateWorkOrder').removeClass('w3-show').addClass('w3-hide');
		} else { // diğer Statülerde göster
			$('#btnUpdateWorkOrder').removeClass('w3-hide').addClass('w3-show');
		}

		if ("@Model.SwExWorkShip" != "") {
			if ("@Model.SwExWorkShip" == "True")
			{
				$('#SwExWorkShip1').prop("checked", "checked");
				$('#ExProp').removeClass('w3-hide').addClass('w3-show');

			}
			else if ("@Model.SwExWorkShip" == "False")
			{
				$('#SwExWorkShip0').prop("checked", "checked");
				$('#ExProp').removeClass('w3-show').addClass('w3-hide');
			}
		}



		$('#SwExWorkShip').change(function () {
			var result = $('#SwExWorkShip').val();
			if (result) {
				$('#ExProp').removeClass('w3-hide').addClass('w3-show');
			} else {
				$('#ExProp').removeClass('w3-show').addClass('w3-hide');
			}
		});

		$('.SwExWorkShip').change(function () {
			var value = $(this).filter(':checked').val();
			if (value == "1") {
				$('#ExProp').removeClass('w3-hide').addClass('w3-show');
			}
			else if (value == "0") {
				$('#ExProp').removeClass('w3-show').addClass('w3-hide');
			}
		});

		$('#btnUpdate').click(function () {
			var SwExWorkT;
			var SwExWorkF;
			var resultApproved;
			var NoBill;
			var CsExWorkShip;
			var ChExWorkShip;
			var Statu;
			var FaturaTipi;

			statu = $('#OrderStatu').val();
			SwExWorkT = $('#SwExWorkShip1').filter(':checked').val();
			SwExWorkF = $('#SwExWorkShip0').filter(':checked').val();
			NoBill = $('#NoBill').val();
			FaturaTipi = $('#OrderFaturaTipi').val();
			resultApproved = $('#SwApproved')[0].checked;

			//Eğer Statu Açık ise her ihtimale izin ver
			if (statu == "10") {

			}
			else if (statu == "15") // Fatura bekleniyor ise kontrol yap
			{
				debugger;
				var raporGonderildimi = $("[name='ReportIsSend']").val().toLowerCase();
				var musteriOnayladiMi = $("[name='ReportApprovedByCustomer']").val().toLowerCase();
				var onaylandiMi = $("[name='SwApproved']").val().toLowerCase();

				if (raporGonderildimi != 'true') {
					alert('Rapor Gönderilmiş Olmalı!');
					return false;
				}

				if (musteriOnayladiMi != 'true') {
					alert('Müşteri Onaylamış Olmalı!');
					return false;
				}

				if (onaylandiMi != 'true') {
					alert('Genel Onaylanmış Olmalı!');
					return false;
				}

				if (FaturaTipi == '') {
					alert('Fatura Tipi seçiniz!');
					return false;
				}

				if (SwExWorkT == null && SwExWorkF == null) {
					alert('Dış işçilik seçmeden devam edemezsiniz!');
					return false;
				}
				else if (!resultApproved) {
					alert('İş emri onaylanmadan iş emrini faturalayamazsınız.');
					return false;
				}
				else {
					if (SwExWorkT != null) { //Dış İşçilik Kullanılmış demektir ve Price ve Açıklama doldurmak zorundasın.

						CsExWorkShip = $('#CsExWorkShip').val();
						ChExWorkShip = $('#ChExWorkShip').val();
						if (CsExWorkShip == '' || ChExWorkShip == '') {
							alert('Dış işçilik kullanıldığından açıklama ve fiyatını doldurmalısınız.');
							return false;
						}

					}
				}
			}
			else if (statu == "20") // Faturalanıyor ise kontrol yap
			{
				var raporGonderildimi = $("[name='ReportIsSend']").val().toLowerCase();
				var musteriOnayladiMi = $("[name='ReportApprovedByCustomer']").val().toLowerCase();
				var onaylandiMi = $("[name='SwApproved']").val().toLowerCase();

				if (raporGonderildimi != 'true') {
					alert('Rapor Gönderilmiş Olmalı!');
					return false;
				}

				if (musteriOnayladiMi != 'true') {
					alert('Müşteri Onaylamış Olmalı!');
					return false;
				}

				if (onaylandiMi != 'true') {
					alert('Genel Onaylanmış Olmalı!');
					return false;
				}

				if (SwExWorkT == null && SwExWorkF == null) {
					alert('Dış işçilik seçmeden devam edemezsiniz!');
					return false;
				}
				else if (!resultApproved) {
					alert('İş emri onaylanmadan iş emrini faturalayamazsınız.');
					return false;
				}
				else if (NoBill == null || NoBill == '') {
					alert('İş emrine fatura numarası yazılmadan faturalayamazsınız.');
					return false;
				}
				else {
					if (SwExWorkT != null) { //Dış İşçilik Kullanılmış demektir ve Price ve Açıklama doldurmak zorundasın.

						CsExWorkShip = $('#CsExWorkShip').val();
						ChExWorkShip = $('#ChExWorkShip').val();
						if (CsExWorkShip == '' || ChExWorkShip == '') {
							alert('Dış işçilik kullanıldığından açıklama ve fiyatını doldurmalısınız.');
							return false;
						}

					}
				}
			}
			else if (statu == "33") {
				$('#orderApproveStatu').val('33');
				$('#WorkOrderUpdateId').val('@Model.WorkOrderId');
				document.getElementById('modalApprove').style.display = 'block';
				return false;
			}
			else if (statu == "34") {
				$('#orderApproveStatu').val('34');
				$('#WorkOrderUpdateId').val('@Model.WorkOrderId');
				document.getElementById('modalApprove').style.display = 'block';
				return false;
			}
			else if (statu == "40")
			{

			}
			else // İptal ediliyor ise kontrol yapma
			{
				if (!confirm('İş emri iptal edilicek, emin misiniz?')) return false;
			}
		});

		$('#btnUpdateWorkOrder').click(function () {
			var Plate = $('#Plate').val();
			var ModelYear = $('#CsModelYear').val();
			var VehicleKm = $('#VehicleKm').val();
			var FuelType = $('#CdFuelType').val();
			var ServiceContactName = $('#ServiceContact').val();
			var ServiceContactPhoneNo = $('#ContactPhoneNumber').val();
			//var NoWorkOrder = $('#NoWorkOrder').val();
			var ComplaintsCustomerRequests = $('#ComplaintsCustomerRequests').val();
			var VIN = $('#VIN').val();
			var Warranty = $('#SwWarranty').val();
			var Revision = $('#SwRevision').val();
			var RepeatWork = $('#SwRepeatWork').val();
			var SerialNo = $('#SerialNo').val();
			var PartNo = $('#PartNo').val();
			var ReportIsSend = $('#ReportIsSend').val();
			var ReportApprovedByCustomer = $('#ReportApprovedByCustomer').val();
			var data = {
				Plate: Plate,
				ModelYear: ModelYear,
				VehicleKm: VehicleKm,
				FuelType : FuelType,
				ServiceContactName: ServiceContactName,
				ServiceContactPhoneNo: ServiceContactPhoneNo,
				//NoWorkOrder: NoWorkOrder,
				WorkOrderId: @Model.WorkOrderId,
				ComplaintsCustomerRequests: ComplaintsCustomerRequests,
				VIN: VIN,
				Warranty: Warranty,
				Revision: Revision,
				RepeatWork: RepeatWork,
				ReportIsSend: ReportIsSend,
				SerialNo: SerialNo,
				PartNo: PartNo,
				ReportApprovedByCustomer: ReportApprovedByCustomer
			};

			console.log(data);
			 urlUpdateWorkOrder = '@Url.Action("UpdateWorkOrderHeader", "WorkOrder")';
			$.ajax({
				type: "POST",
				url: urlUpdateWorkOrder,
				content: "application/json; charset=utf-8",
				dataType: "json",
				data: data ,//JSON.stringify(),
				success: function (d) {
					if (d.success == true)
						//alert(d.responseText);
						location.reload();
					else { }
				},
				error: function (xhr, textStatus, errorThrown) {
					alert('Error \n' + data);// TODO: Show error
				}
			});


		});

		$('#Plate').keyup(function () {
			this.value = $.trim(this.value.toUpperCase());
		});

		$('#VIN').keyup(function () {
			this.value = $.trim(this.value.toUpperCase());
		});

		$('#SerialNo').keyup(function () {
			this.value = $.trim(this.value.toUpperCase());
		});

		$('#PartNo').keyup(function () {
			this.value = $.trim(this.value.toUpperCase());
		});

		$('.btnFaturaKes').click(function () {
			debugger;
			$('#FaturaMessage').html($(this).attr('displayIsEmri'));

			var FaturaTipi = $(this).attr('FaturaTipi');
			var FaturaId = $(this).attr('FaturaId');
			var IsEmriId = $(this).attr('IsEmriId')
			var IsEmriTipi = $(this).attr('IsEmriTipi');
			$('#mdlFaturaId').val(FaturaId);
			$('#mdlIsEmriId').val(IsEmriId);
			$('#mdlIsEmriTipi').val(IsEmriTipi);
			$('#FaturaTipi').val(FaturaTipi);

			if (IsEmriTipi == "Irsaliye") {
				$("#male").prop("checked", true);
				$('#female').attr("disabled", "disabled");
				$('#divFaturaNo').removeClass("w3-hide").addClass("w3-show");
				$('#divFisNo').removeClass("w3-show").addClass("w3-hide");
			}
			else {
				$('#mdlFaturaNo').val('');

				if (FaturaTipi == "20") // Fiş kesilecek demektir.
				{

					$('#mdlFaturaNo').attr("disabled", "disabled");
					$('#btnFaturaFisOlustur').html('Fiş Oluştur');
					$('#lblFaturaFisNumarasi').html('Fiş Numarası');
					$('#fisMessage').removeClass('w3-hide').addClass('w3-show');

				}
				else // Normal Faturadır
				{
					$('#mdlFaturaNo').removeAttr("disabled");
					$('#btnFaturaFisOlustur').html('Fatura Oluştur');
					$('#lblFaturaFisNumarasi').html('Fatura Numarası');

					$('#fisMessage').removeClass('w3-show').addClass('w3-hide');
				}

			}

			document.getElementById('modalFatura').style.display = 'block';

			return false;

		});

	});
	//SwRevision
	function AutoCalculateWarrantyOnChange(element) {
		element.checked ? $('#SwWarranty').val(true) : $('#SwWarranty').val(false);
	}

	function AutoCalculateRevisionOnChange(element) {
		element.checked ? $('#SwRevision').val(true) : $('#SwRevision').val(false);
	}

	function AutoCalculateRepeatWorkOnChange(element) {
		element.checked ? $('#SwRepeatWork').val(true) : $('#SwRepeatWork').val(false);
	}

	function AutoCalculateReportIsSendOnChange(element) {
		element.checked ? $('#ReportIsSend').val(true) : $('#ReportIsSend').val(false);
	}
	function AutoCalculateReportApprovedByCustomerOnChange(element) {
		element.checked ? $('#ReportApprovedByCustomer').val(true) : $('#ReportApprovedByCustomer').val(false);
	}


</script>
<div class="w3-panel">
	<div class="w3-row-padding w3-card">

		@if (ViewBag.yetkili != null)
		{
			using (Html.BeginForm("ApproveWorkOrder", "WorkOrder", FormMethod.Post))
			{
				@Html.HiddenFor(x => x.WorkOrderId, new { name = "WorkOrderId" })

				if (Model.Statu == 33)
				{
					<div class="w3-panel w3-teal w3-round">
						<div class="w3-row">
							<div class="w3-half"><p><b>İş emri IADE onayında beklemektedir.</b></p></div>
							@if (ViewBag.yetkili == true)
							{
								<div class="w3-half w3-right w3-padding-top"><button class="w3-btn w3-ripple w3-green w3-right w3-round" id="btnUpdate1" type="submit"><i class="fa fa-floppy-o"></i>&nbsp; İade İşlemini Onayla</button></div>
							}
						</div>
						<div class="w3-half w3-padding">
							<label>İade Açıklaması</label>
							<textarea name="IptalIadeAciklamasi" class="w3-input w3-border w3-round" rows="3" cols="300">@Model.IadeIptalAciklamasi</textarea>
						</div>
					</div>
				}
				else if (Model.Statu == 34)
				{
					<div class="w3-panel w3-teal w3-round">
						<div class="w3-row">
							<div class="w3-quarter"><p><b>İş emri IPTAL onayında beklemektedir.</b></p></div>
							@if (ViewBag.yetkili == true)
							{
								<div class="w3-half w3-right w3-padding-top"><button class="w3-btn w3-ripple w3-green w3-right w3-round" id="btnUpdate2" type="submit"><i class="fa fa-floppy-o"></i>&nbsp; İptal İşlemini Onayla</button></div>
							}
						</div>
						<div class="w3-half w3-padding">
							<label>İptal Açıklaması</label>
							<textarea name="IptalIadeAciklamasi" class="w3-input w3-border w3-round" rows="3" cols="300">@Model.IadeIptalAciklamasi</textarea>
						</div>
					</div>
				}
			}
		}


		<div class="w3-panel w3-light-grey w3-round">
			<div class="w3-quarter">
				&nbsp;
				<div class="w3-left"><p>Sistem İş Emri Numarası :  @Model.WorkOrderId</p></div>
			</div>
			<div class="w3-half w3-hide-small">
				&nbsp;
				@if (Model.BillingDate != null)
				{
					<div class="w3-left">
						<p>Fatura Tarihi: @Convert.ToDateTime(Model.BillingDate).ToShortDateString()</p>
					</div>
				}

			</div>
			<div class="w3-quarter">

				<div class="w3-left">
					<p>İş Emri Giriş Tarihi: @Convert.ToDateTime(Model.CreatedDate).ToShortDateString()</p>
				</div>

				<div class="w3-right w3-margin-top">
					<span style="cursor:alias"><i class="fa fa-file-word-o" aria-hidden="true" onclick="onDownloadDocument();"></i></span> &nbsp;&nbsp;
					<span style="cursor:alias"><i class="fa fa-file-pdf-o " aria-hidden="true" onclick="onPdfExport();"></i></span>&nbsp;&nbsp;
					<span style="cursor:alias"><i class="fa  fa-print" aria-hidden="true" onclick="onPrintClick();"></i></span>

				</div>
			</div>

		</div>
		<div class="w3-row">
			<div class="w3-third w3-padding">
				<label>Firma</label>
				@Html.DropDownList("CompanyId", (SelectList)ViewBag.Companies, htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "CompanyId", disabled = "true" }) @*, @onchange = "onChangeCompany();"*@

			</div>
			<div class="w3-third w3-padding">
				<label>Arac Model</label>
				@Html.DropDownList("VehicleId", (SelectList)ViewBag.Vehicles, htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "VehicleId", disabled = "true" })
			</div>
			<div class="w3-third w3-padding">
				<div class="w3-half" style="padding-right:10px!important;">
					<label>Plaka</label>
					@Html.EditorFor(model => model.Plate, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", autocomplete = "off", maxlength = "36" } })

				</div>
				<div class="w3-half">
					<label>Model Yılı</label>
					@Html.DropDownList("CsModelYear", ViewData["listModelYear"] as List<SelectListItem>, htmlAttributes: new { @class = "w3-select w3-border w3-round" })
				</div>
			</div>

		</div>
		<div class="w3-row">
			<div class="w3-third w3-padding">
				<label>Servis Adı</label>
				@Html.DropDownList("ServiceId", (SelectList)ViewBag.Services, htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "ServiceId", disabled = "true" })
			</div>


			<div class="w3-third w3-padding">
				<label>Şase No</label>
				@Html.EditorFor(model => model.VIN, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", autocomplete = "off", maxlength = "24" } })

			</div>
			<div class="w3-third w3-padding">
				<div class="w3-half" style="padding-right:10px!important;">
					<label>Araç Km</label>
					@Html.TextBoxFor(model => model.VehicleKm, new { @class = "w3-input w3-border w3-round onlynumeric", autocomplete = "off", maxlength = "7" })

				</div>
				<div class="w3-half">
					<label>Yakıt Tipi</label>
					@Html.DropDownList("CdFuelType", new List<SelectListItem>
																																																																																												{
																																																																																												new SelectListItem{ Text="Yakıt Tipi Seçiniz", Value = "0" },
																																																																																												new SelectListItem{ Text="Benzin", Value = "1" },
																																																																																												new SelectListItem{ Text="Dizel", Value = "2" },
																																																																																												}, htmlAttributes: new { @class = "w3-select w3-border w3-round" })

				</div>
			</div>
		</div>
		<div class="w3-row">
			<div class="w3-third w3-padding">
				<label>Servis Yetkilisi</label>
				@Html.EditorFor(model => model.ServiceContact, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", autocomplete = "off" } })
			</div>
			<div class="w3-third w3-padding">
				<label>Telefon Numarasi</label>
				@Html.EditorFor(model => model.ContactPhoneNumber, new { htmlAttributes = new { @class = "w3-input w3-border phone w3-round", autocomplete = "off" } })
			</div>
			<div class="w3-third w3-padding">
				<label>Gelen Parça</label>
				@Html.DropDownList("TaskId", (SelectList)ViewBag.Tasks, htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "TasksId", disabled = "true" })


			</div>
		</div>

		<div class="w3-row">
			<div class="w3-third w3-padding">
				<label>İş Emri Numarası</label>
				@Html.EditorFor(model => model.NoWorkOrder, new { htmlAttributes = new { @class = "w3-input w3-border w3-round ", autocomplete = "off", disabled = "true" } })
			</div>
			<div class="w3-third w3-padding">
				<div class="w3-half w3-padding-right">
					<label>Seri No</label>
					@Html.TextBoxFor(model => model.SerialNo, new { @class = "w3-input w3-border w3-round", autocomplete = "off", maxlength = "24" })
				</div>
				<div class="w3-half">
					<label>Parça No</label>
					@Html.TextBoxFor(model => model.PartNo, new { @class = "w3-input w3-border w3-round", autocomplete = "off", maxlength = "24" })
				</div>

			</div>
		</div>
		<div class="w3-row">
			<div class="w3-row w3-padding">
				<table cellspacing="3" cellpadding="3">
					<tbody>
						<tr>
							<td><label>Garanti Kapsamında Mı? </label></td>
							<td>
								@Html.CheckBoxFor(model => model.SwWarranty, new { @class = "w3-check", onchange = "AutoCalculateWarrantyOnChange(this)", value = Model.SwWarranty })
							</td>
							<td><label>Revizyon Yapılmış Mı? </label></td>
							<td>  @Html.CheckBoxFor(model => model.SwRevision, new { @class = "w3-check", onchange = "AutoCalculateRevisionOnChange(this)", value = Model.SwRevision })
							<td><label>İş Tekrarı Mı? </label></td>
							<td>  @Html.CheckBoxFor(model => model.SwRepeatWork, new { @class = "w3-check", onchange = "AutoCalculateRepeatWorkOnChange(this)", value = Model.SwRepeatWork })
							<td><label>Rapor Gönderildi Mı? </label></td>
							<td>  @Html.CheckBoxFor(model => model.ReportIsSend, new { @class = "w3-check", onchange = "AutoCalculateReportIsSendOnChange(this)", value = Model.ReportIsSend })
							<td><label>Müşteri Onayladı Mı? </label></td>
							<td>  @Html.CheckBoxFor(model => model.ReportApprovedByCustomer, new { @class = "w3-check", onchange = "AutoCalculateReportApprovedByCustomerOnChange(this)", value = Model.ReportApprovedByCustomer })

						</tr>
					</tbody>
				</table>
			</div>
		</div>
		<div class="w3-row">
			<div class="w3-padding">
				<label class="w3-text-grey">Şikayet açıklaması ve Müşteri talepleri: </label>
				@Html.TextAreaFor(model => model.ComplaintsCustomerRequests, new { @class = "w3-input w3-border w3-round", autocomplete = "off" })

			</div>


		</div>
		<div class="w3-row">
			<div class="w3-half w3-right">
				<div class="w3-quarter w3-right">
					<button class="w3-btn w3-ripple w3-blue" id="btnUpdateWorkOrder"><i class="fa fa-floppy-o"></i>&nbsp; Güncelle</button>

				</div>
			</div>

		</div>
		<div class="w3-row w3-row-padding">
			<hr />
		</div>
		<div>
			@switch (Model.TaskId)
			{
				case 1:
					<div class="w3-row w3-row-padding w3-margin-bottom">

						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.KlimaFixing.First().SwKasnakKisimHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kasnak kısmında hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.KlimaFixing.First().SwKompleKlimaKompHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Komple klima kompresöründe hasar</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.KlimaFixing.First().SwPleytKisimHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Pleyt kısmanda hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.KlimaFixing.First().SwBobinHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Bobinde arıza</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.KlimaFixing.First().SwRulmanHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Rulmanda hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.KlimaFixing.First().SwBasincValfAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Basınç valfinde arıza</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.KlimaFixing.First().SwGovdeHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Gövde de hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.KlimaFixing.First().SwKapakHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kapakta hasar</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						@Html.TextAreaFor(model => Model.KlimaFixing.First().TespitAciklama, new { @class = "w3-input w3-border w3-round", rows = "6", cols = "300", @disabled = "disabled" })
					</div>

					break;
				case 2:
					<div class="w3-row w3-row-padding w3-margin-bottom">

						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.EGRFixing.First().SwElektronikValfAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Elektronik valf arızalı</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.EGRFixing.First().SwAsiriKum, new { @class = "w3-check", @disabled = "disabled" })
								<label>Aşırı Kurum</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.EGRFixing.First().SwBilyaliValfAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Bilyalı valf arızalı</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						@Html.TextAreaFor(model => Model.EGRFixing.First().TespitAciklama, new { @class = "w3-input w3-border w3-round", rows = "6", cols = "300", @disabled = "disabled" })
					</div>
					break;
				case 3:
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.SanzimanFixing.First().SwPistonlardaAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Pistonlarda aşınma/Hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.SanzimanFixing.First().SwSelenoidKacagi, new { @class = "w3-check", @disabled = "disabled" })
								<label>Selenoid kaçağı</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.SanzimanFixing.First().SwBaltalardaYanma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Balatalarda Yarma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.SanzimanFixing.First().SwTekYonluKavramaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Tek yönlü kavramada hasar </label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.SanzimanFixing.First().SwDirekKavramaTasindaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Direk kavrama tasında hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.SanzimanFixing.First().SwVitesCatalindaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Vites çatalında hasar</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.SanzimanFixing.First().SwPleydlerdeYanma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Pleydlerde yanma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.SanzimanFixing.First().SwGunesDislideHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Güneş dişlide hasar</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.SanzimanFixing.First().SwGezegenDislideHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Gezegen dişlide hasar </label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.SanzimanFixing.First().SwDifransiyeldeKirilma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Difransiyelde kırılma </label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.SanzimanFixing.First().SwKavramadaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kavramada hasar</label>

							</div>

						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						@Html.TextAreaFor(model => Model.SanzimanFixing.First().TespitAciklama, new { @class = "w3-input w3-border w3-round", rows = "6", cols = "300", @disabled = "disabled" })
					</div>
					break;
				case 4:
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.TurboSarjFixing.First().SwTamirTakimindaAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Tamir takımında aşınma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.TurboSarjFixing.First().SwWastegateHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Wastegate hasar</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.TurboSarjFixing.First().SwYahKapagindaAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Yağ kapağında aşınma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.TurboSarjFixing.First().SwEgzosSalyangozundaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Egzoz salyangozunda hasar </label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.TurboSarjFixing.First().SwKomprosorPervanesindeHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kompresör pervanesinde hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.TurboSarjFixing.First().SwKomprasorSalyangozundaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kompresör salyangozunda hasar</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.TurboSarjFixing.First().SwTurbinMilindeHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Türbin milinde hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.TurboSarjFixing.First().SwKompleTurboHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Komple turbo hasarı</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.TurboSarjFixing.First().SwVNTMekanizmasindaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>VNT mekanizmasında hasar </label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.TurboSarjFixing.First().SwVNTMekanizmasindaAsiriKurum, new { @class = "w3-check", @disabled = "disabled" })
								<label>VNT mekanizmasında aşırı kurum </label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.TurboSarjFixing.First().SwMerkezGovdeHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Merkez gövde de hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.TurboSarjFixing.First().SwCartridgeKompleHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Cartridge komple hasar</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						@Html.TextAreaFor(model => Model.TurboSarjFixing.First().TespitAciklama, new { @class = "w3-input w3-border w3-round", rows = "6", cols = "300", @disabled = "disabled" })
					</div>
					break;
				case 5:
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.AlternatorFixing.First().SwKomurAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kömürlerde aşınma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.AlternatorFixing.First().SwKonjektorAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Konjektör arızalı</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.AlternatorFixing.First().SwStatorAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Statör arızalı</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.AlternatorFixing.First().SwDiyotTablasiHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Diyot tablası hasarı </label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.AlternatorFixing.First().SwRotorAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Rotor arızalı </label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.AlternatorFixing.First().SwKasnakAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kasnak hasarı</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.AlternatorFixing.First().SwRulmanHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Rulman hasarı</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.AlternatorFixing.First().SwOnKapakHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Ön kapak hasarı</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.AlternatorFixing.First().SwArkaKapakHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Arka kapak hasarı </label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.AlternatorFixing.First().SwRulmanYatagiHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Rulman yatağı hasarı</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.AlternatorFixing.First().SwRotorBakirAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Rotor bakırı aşınma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.AlternatorFixing.First().SwPlastikKapakHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Plastik kapak hasar</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						@Html.TextAreaFor(model => Model.AlternatorFixing.First().TespitAciklama, new { @class = "w3-input w3-border w3-round", rows = "6", cols = "300", @disabled = "disabled" })
					</div>
					break;
				case 6:
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwCatalHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Çatal hasarı</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwKomurAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kömürlerde aşınma</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwKomurYuvasindaAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kömür yuvasında aşınma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwDislideAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Dişlide aşınma</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwDisliKafasindaAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Dişli kafasında aşınma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwRediktorDisliAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Rediktör Dişlisinde aşınma</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwDebriyajAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Debriyaj arızalı</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwArkaKapaktaAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Arka kapakta aşınma</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwPinyonKapakAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Pinyon Kapağında aşınma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwOtomatikTamirTakimiAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Otomatik tamir takımında aşınma</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwBurcAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Burçta aşınma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwOtomatikAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Otomatik arızası</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwYardimciOtomatikAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Yardımcı otomatik arızası</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwYastikAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Yastıkta arıza</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwKollektorAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kollektör arızası</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.MarsMotorFixing.First().SwRulmanAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Rulmanda aşınma</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						@Html.TextAreaFor(model => Model.MarsMotorFixing.First().TespitAciklama, new { @class = "w3-input w3-border w3-round", rows = "6", cols = "300", @disabled = "disabled" })
					</div>
					break;
				case 7:
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonPompaFixing.First().SwTamirTakimindaAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Tamir takımında aşınma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonPompaFixing.First().SwPompaMilindeAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Pompa milinde aşınma</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonPompaFixing.First().SwBurclardaSarma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Burçlarda sarma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonPompaFixing.First().SwTamirTakimindaKirilma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Tamir takımında kırılma</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonPompaFixing.First().SwAltKapaktaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Alt kapakta hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonPompaFixing.First().SwUstKapaktaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Üst kapakta hasar</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonPompaFixing.First().SwKasadaCatlak, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kasada çatlak</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonPompaFixing.First().SwPompaKecesindeHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Pompa keçesinde hasar</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonPompaFixing.First().SwPompaOringindeHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Pompa oringinde hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonPompaFixing.First().SwYagBasincSupabindaAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Yağ basınç supabında arıza</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonPompaFixing.First().SwMilSegmanindaAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Mil segmanında arıza</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonPompaFixing.First().SwRulmandaBozulma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Rulmanda bozulma</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						@Html.TextAreaFor(model => Model.DireksiyonPompaFixing.First().TespitAciklama, new { @class = "w3-input w3-border w3-round", rows = "6", cols = "300", @disabled = "disabled" })
					</div>
					break;
				case 8:
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonMekanikFixing.First().SwAnaMildeAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Ana milde aşınma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonMekanikFixing.First().SwSektorMilindeAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Sektör milinde aşınma</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonMekanikFixing.First().SwKovandaHasarlanma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kovanda hasarlanma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonMekanikFixing.First().SwBaglantiAyagindaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Bağlantı ayağında hasar</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonMekanikFixing.First().SwMotorBilyalarindaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Motor Bilyalarında hasarlanma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonMekanikFixing.First().SwMafsalBilyalarindaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Mafsal bilyalarında hasarlanma</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonMekanikFixing.First().SwAsiklerdeHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Aşıklarda hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonMekanikFixing.First().SwMasuraBilya, new { @class = "w3-check", @disabled = "disabled" })
								<label>Masura bilya</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonMekanikFixing.First().SwMildeEgrilik, new { @class = "w3-check", @disabled = "disabled" })
								<label>Milde eğrilik</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonMekanikFixing.First().SwBaglantiBurclarindaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Bağlantı burçlarında hasarlanma</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						@Html.TextAreaFor(model => Model.DireksiyonMekanikFixing.First().TespitAciklama, new { @class = "w3-input w3-border w3-round", rows = "6", cols = "300", @disabled = "disabled" })
					</div>
					break;
				case 9:
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwAnaMildeAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Ana milde aşınma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwSektorMilindeAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Sektör milinde aşınma</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwKovandaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Kovanda hasarlanma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwBaglantiAyagindaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Bağlantı ayağında hasar</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwMotorBilyalarindaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Motor Bilyalarında hasarlanma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwMafsalBilyalarindaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Mafsal bilyalarında hasarlanma</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwAsiklardaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Aşıklarda hasar</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwMasuraBilya, new { @class = "w3-check", @disabled = "disabled" })
								<label>Masura bilya</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwMildeEgrilik, new { @class = "w3-check", @disabled = "disabled" })
								<label>Milde eğrilik</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwBaglantiBurclarindaHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Bağlantı burçlarında hasarlanma</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwKecelerdePatlak, new { @class = "w3-check", @disabled = "disabled" })
								<label>Keçelerde patlak</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwPistondaKopma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Pistonda kopma</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwBeyinPistonlarindaAsinma, new { @class = "w3-check", @disabled = "disabled" })
								<label>Beyin pistonlarında aşınma</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DireksiyonHidrolikFixing.First().SwYagDagiticiBeyindeHasar, new { @class = "w3-check", @disabled = "disabled" })
								<label>Yağ dağıtıcı beyinde hasar</label>

							</div>
						</div>

					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						@Html.TextAreaFor(model => Model.DireksiyonHidrolikFixing.First().TespitAciklama, new { @class = "w3-input w3-border w3-round", rows = "6", cols = "300", @disabled = "disabled" })
					</div>
					break;
				case 10:
					<div class="w3-row w3-row-padding w3-margin-bottom">

						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DpfFixing.First().SwElektronikValfAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Elektronik valf arızalı</label>

							</div>
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DpfFixing.First().SwAsiriKum, new { @class = "w3-check", @disabled = "disabled" })
								<label>Aşırı Kurum</label>

							</div>
						</div>
						<div class="w3-half">
							<div class="w3-half">
								@Html.CheckBoxFor(model => Model.DpfFixing.First().SwBilyaliValfAriza, new { @class = "w3-check", @disabled = "disabled" })
								<label>Bilyalı valf arızalı</label>

							</div>
						</div>
					</div>
					<div class="w3-row w3-row-padding w3-margin-bottom">
						@Html.TextAreaFor(model => Model.DpfFixing.First().TespitAciklama, new { @class = "w3-input w3-border w3-round", rows = "6", cols = "300", @disabled = "disabled" })
					</div>
					break;
				default:
					break;

			}
		</div>
		@if (Model.WorkOrderParts.Count() > 0)
		{
			<div class="w3-row w3-row-padding">
				<h5>
					Eklenen Parçalar
					@if (ViewBag.IsMuhasebe)
					{
						<script>
							function copyToClipboard(element) {
								var urlField = document.getElementById("tableofParts");

								// create a Range object
								var range = document.createRange();
								// set the Node to select the "range"
								range.selectNode(urlField);
								// add the Range to the set of window selections
								window.getSelection().addRange(range);

								// execute 'copy', can't 'cut' in this case
								document.execCommand('copy');

								//var $temp = $("<textarea>");
								//var brRegex = /<br\s*[\/]?>/gi;
								//$("body").append($temp);
								//$temp.val($(element).html().replace(brRegex, "\r\n")).select();
								//document.execCommand("copy");
								//$temp.remove();

								toastr.success("Parçalar Ctrl+V ye kopyalandı.", "İşlem Başarılı.");
							}
						</script>
						<label>&nbsp;&nbsp;&nbsp;&nbsp;</label><button class="w3-btn w3-small w3-blue w3-round" onclick="copyToClipboard('er#error-details')">Parçaları kopyala</button>
						<er id="error-details" class="w3-hide">
							@foreach (var item in Model.WorkOrderParts)
							{@(item.Parts.Name + " ") @(item.Quantity + " ") @(item.SalesPrice + " ")<br>}

						</er>
						<table id="tableofParts" style="opacity:0;position:absolute;z-index:-1">
							@foreach (var item in Model.WorkOrderParts)
							{
								<tr>
									<td>@(item.Parts.Name )</td>
									<td>@(item.Quantity ) </td>
									<td>@(item.SalesPrice )</td>
								
								</tr>
							}
						</table>
					}
				</h5>


				<table class="w3-table-all w3-margin-top w3-margin-bottom" id="tableIsEmriKalemleri">
					<thead>
						<tr>
							<td>#</td>
							@*<td>#</td>*@
							@*<td>#</td>*@
							@*<td>Tip</td>*@
							<td>İş/Parça No</td>
							<td>İş/Parça Adı</td>
							<td>Adet/Saat</td>
							<td>Kdv Hariç Birim Fiyat</td>
							<td>İskonto %</td>
							<td>İskonto Tutarı</td>
							<td>KDVsiz İskontolu Birim Fiyat</td>
							<td>KDV Oranı</td>
							@*<td>KDV Tutarı</td>*@
							<td>KDVli Birim Fiyat</td>
							<td>T.KDV Tutarı</td>
							<td>Kdv Hariç Tutar</td>
						</tr>
					</thead>
					<tbody>
						@if (faturaKalems.Count > 0)
						{
							foreach (var kalem in faturaKalems)
							{
								<tr>
									<td>
										@kalemCounter
									</td>
									@*<td>
											<input type="checkbox" class="kalemWillDelete" KalemId="@kalem.IsEmriKalemId" />
										</td>*@
									@*<td>
											@if (Model.Statu == 10)
											{
												<a href="/WorkOrder/DeletePartFromOrderPart?WorkOrderPartId=@kalem.IsEmriKalemId&&WorkOrderId=@ViewBag.WorkOrderId" title="İş emrinden kalemi silmek için tıklayınız." class="w3-text-red aisEmriIptalLine"><i class="fa fa-times-circle-o w3-hover-opacity" aria-hidden="true"></i></a>
											}
											else
											{
												<button href="/IsEmri/IsEmriKalemSil?IsEmriKalemId=@kalem.IsEmriKalemId" title="İş emrinden kalemi silmek için tıklayınız." class="w3-text-red aisEmriIptalLine"><i class="fa fa-times-circle-o w3-hover-opacity" aria-hidden="true"></i></button>
											}
										</td>*@
									@*<td>Parça</td>*@
									<td>@kalem.ParcaNo</td>
									<td>@kalem.ParcaAdi</td>
									<td>
										<a onclick="document.getElementById('depoParcaTeslim-@kalem.IsEmriKalemId').style.display='block'" class="w3-hover-opacity" style="cursor: pointer;" title="Parça Teslim Durumunu Görüntülemek İçin Tıklayınız..">@kalem.Miktar</a>
										<div id="depoParcaTeslim-@kalem.IsEmriKalemId" class="w3-modal">
											<div class="w3-modal-content">
												<div class="w3-container">
													<span onclick="document.getElementById('depoParcaTeslim-@kalem.IsEmriKalemId').style.display='none'" class="w3-button w3-display-topright">&times;</span>
													<div class="w3-row w3-center">
														<p>@kalem.ParcaNo - @kalem.ParcaAdi parçasından @kalem.TeslimEdilenMiktar adet/miktar teslim edilmiştir</p>

													</div>
												</div>
											</div>
										</div>
									</td>
									<td>@String.Format("{0:0.00}", kalem.kdvHaricBirimFiyati)</td>
									<td>
										<a title="Kalem İstonto Oranı girmek için tıklayın" class="w3-text-red btnkalemIskonto w3-right" IsEmriKalemId="@kalem.IsEmriKalemId"><i class="fa fa-cart-arrow-down w3-hover-opacity" aria-hidden="true"></i></a>
										<label class="w3-left">@(kalem.kalemIskontoOrani * 100)</label>
									</td>
									<td>@String.Format("{0:0.00}", kalem.kalemIskontoTutari)</td>
									<td>@String.Format("{0:0.00}", kalem.KdvHaricIskontoluBFiyat)</td>
									<td>@String.Format("{0:0.00}", kalem.KdvOrani * 100)</td>
									@*<td>@String.Format("{0:0.00}",kalem.KdvBirimTutari)</td>*@
									<td>@String.Format("{0:0.00}", kalem.KdvDahilBirimFiyat)</td>
									<td>@String.Format("{0:0.00}", kalem.ToplamKdvliTutari)</td>
									<td>@String.Format("{0:0.00}", kalem.KdvHaricTutar)</td>
								</tr>
								kalemCounter += 1;
							}
							if (Model.SwExWorkShip == true)
							{
								<tr>
									<td>
										@kalemCounter
									</td>
									<td>Dış İşçilik</td>
									<td>@Model.ChExWorkShip</td>
									<td>
										<a class="w3-hover-opacity" style="cursor: pointer;" title="Parça Teslim Durumunu Görüntülemek İçin Tıklayınız..">1</a>
									</td>
									<td>@String.Format("{0:0.00}", Model.CsExWorkShip)</td>
									<td>
										<a title="Kalem İstonto Oranı girmek için tıklayın" class="w3-text-red btnkalemIskonto w3-right"><i class="fa fa-cart-arrow-down w3-hover-opacity" aria-hidden="true"></i></a>
										<label class="w3-left">@String.Format("{0:0.00}", 0)</label>
									</td>
									<td>@String.Format("{0:0.00}", 0)</td>
									<td>@String.Format("{0:0.00}", Model.CsExWorkShip)</td>
									<td>@String.Format("{0:0.00}", 18)</td>
									<td>@String.Format("{0:0.00}", Model.CsExWorkShip + (Model.CsExWorkShip * 18 / 100))</td>
									<td>@String.Format("{0:0.00}", Model.CsExWorkShip + (Model.CsExWorkShip * 18 / 100))</td>
									<td>@String.Format("{0:0.00}", Model.CsExWorkShip)</td>
								</tr>

							}

						}
						else
						{
							<tr>
								<td class="w3-center w3-text-red" colspan="13"> <b>İŞ EMRİNE PARÇA VEYA İŞÇİLİK EKLENMEMİŞTİR. </b></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
								<td style="display:none;"></td>
							</tr>
						}
					</tbody>
					@*<tfoot>
							<tr>
								<th colspan="10"></th>
								<th colspan="3" class="w3-right">
									Toplam Müşteri <b>@String.Format("{0:0.00}", Model.isEmriKalemleri.Sum(x => x.KdvHaricTutar)) ₺ </b><br />
									Kdv Tutarı <b>@String.Format("{0:0.00}", (Model.isEmriKalemleri.Sum(x => x.ToplamKdvliTutari))) ₺</b><br />
									Kdv'li Toplam <b>@String.Format("{0:0.00}", (Model.isEmriKalemleri.Sum(x => x.ToplamKdvliTutari) + Model.isEmriKalemleri.Sum(x => x.KdvHaricTutar))) ₺</b><br />
								</th>
							</tr>

						</tfoot>*@
				</table>
				<table class="w3-right" cellspacing="10" cellpadding="5">

					<tr>
						<td>Toplam Müşteri</td>
						<td class="w3-right"><b>@String.Format("{0:0.00}", faturaKalems.Sum(x => x.KdvHaricTutar) + (decimal)CsExWork) ₺ </b></td>
					</tr>
					<tr>
						<td>Kdv Tutarı</td>
						<td class="w3-right"><b>@String.Format("{0:0.00}", (faturaKalems.Sum(x => x.ToplamKdvliTutari) + (decimal)CsExWorkKDV)) ₺</b></td>
					</tr>
					<tr>
						<td>Kdv'li Toplam </td>
						<td class="w3-right"><b>@String.Format("{0:0.00}", (faturaKalems.Sum(x => x.ToplamKdvliTutari) + (decimal)CsExWork + faturaKalems.Sum(x => x.KdvHaricTutar) + (decimal)CsExWorkKDV)) ₺</b></td>
					</tr>
				</table>

			</div>
		}
		<div>
			@using (Html.BeginForm("UpdateWorkOrderStatu", "WorkOrder", FormMethod.Post))
			{
				<div class="w3-row w3-margin-bottom w3-padding">
					<div class="w3-row">
						<div class="w3-quarter">
							<label>Fatura No - <span class="w3-small">Muhasebe tarafından doldurulacaktır.</span></label>
							@Html.TextBoxFor(model => model.NoBill, new { @class = "w3-input w3-border w3-round", autocomplete = "off", maxlength = "24", @disabled = "disabled" })
						</div>
						<div class="w3-half w3-margin-left">
							<label>&nbsp;</label>
							<table>
								<tr>
									<td><label>Onaylandı mı?</label></td>
									<td>	@Html.CheckBoxFor(model => Model.SwApproved, new { @class = "w3-check" })</td>
								</tr>
							</table>


						</div>
					</div>

				</div>

				<div class="w3-row w3-margin-bottom w3-padding">
					<div class="w3-quarter">
						<table>
							<tr>
								<td>
									<label>Dış İşçilik Kullanıldı mı?</label>
								</td>
								<td>
									<label>Evet</label>
								</td>
								<td>
									@Html.RadioButtonFor(model => model.SwExWorkShip, "1", new { @id = "SwExWorkShip1", @class = "SwExWorkShip", name = "SwExWorkShip1" })
								</td>
								<td>
									<label>Hayır</label>
								</td>
								<td>
									@Html.RadioButtonFor(model => model.SwExWorkShip, "0", new { @id = "SwExWorkShip0", @class = "SwExWorkShip", name = "SwExWorkShip0" })
								</td>
							</tr>
						</table>


					</div>
				</div>
				<div class="w3-row w3-margin-bottom w3-padding w3-hide" id="ExProp">
					<div class="w3-row">
						<div class="w3-quarter">
							<label>Dış İçşilik Fiyat</label>
							@Html.EditorFor(model => model.CsExWorkShip, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", autocomplete = "off" } })
						</div>
					</div>
					<div class="w3-row">
						<label>Dış İşçilik Açıklama</label>
						@Html.EditorFor(model => model.ChExWorkShip, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", autocomplete = "off" } })
					</div>
				</div>
				<div class="w3-row w3-margin-bottom w3-padding">

					<div class="w3-quarter w3-right">

						@Html.HiddenFor(x => x.WorkOrderId, new { name = "WorkOrderId" })
						<div class="w3-half">
							@*<select class="w3-select" name="OrderStatu" id="OrderStatu">
									<option value="" disabled selected>İş Emri Durum</option>
									<option value="10">Açık</option>
									<option value="20">Faturalandı</option>
									<option value="40">İade</option>
									<option value="30">İptal</option>

								</select>*@
							<select class="w3-select" name="OrderStatu" id="OrderStatu">
								<option value="" disabled selected>İş Emri Durum</option>
								@if (Model.Statu == 20)
								{
									<option value="10" disabled>Açık</option>
									<option value="15" disabled>Fatura Bekleniyor</option>
									<option value="20" disabled>Faturalandı</option>
								}
								else
								{
									<option value="10">Açık</option>
									<option value="15">Fatura Bekleniyor</option>
									<option value="20" disabled>Faturalandı</option>
									if (Model.Statu == 30 || Model.Statu == 40)
									{
										if (Model.Statu == 40)
										{
											<option value="40" disabled>İade</option>
										}
										if (Model.Statu == 30)
										{
											<option value="30" disabled>İptal</option>
										}
									}
									else
									{
										<option value="33">İade</option>
										<option value="34">İptal</option>
									}
								}






							</select>
						</div>
						<div class="w3-half">
							<button class="w3-btn w3-ripple w3-green" id="btnUpdate"><i class="fa fa-floppy-o"></i>&nbsp; Güncelle</button>

						</div>



					</div>
					<div class="w3-threequarter w3-right">
						<div class="w3-threequarter">
							<div class="w3-padding">
								<label class="w3-text-grey">Muhasebeye Not </label>
								@Html.TextAreaFor(model => model.MuhasebeNotu, new { @class = "w3-input w3-border w3-round", autocomplete = "off", @maxlength = "512" })

							</div>
						</div>
						<div class="w3-quarter">
							<div class=" w3-right w3-padding-right">
								<select class="w3-select" name="OrderFaturaTipi" id="OrderFaturaTipi">
									<option value="">Fatura Tipi Seçiniz</option>
									<option value="10">Normal Fatura</option>
									<option value="20">Açık Fatura  </option>
								</select>
							</div>
						</div>


					</div>

				</div>
			}

			@if (ViewBag.IsMuhasebe)
			{
				if (ViewBag.FaturaKesildiMi == 50)
				{
					<label>Fatura kesilmiştir.</label>
				}
				else
				{
					<div class="w3-row w3-margin-bottom w3-padding">
						<div class="w3-quarter w3-padding">
							<a href="#" class="w3-small w3-btn w3-ripple w3-blue w3-left w3-round w3-margin-right btnFaturaKes w3-block" faturaid="@ViewBag.faturaid" isemritipi="@ViewBag.isemritipi" isemriid="@Model.WorkOrderId" faturatipi="@ViewBag.faturatipi" displayisemri="@ViewBag.displayisemri">Fatura Kes</a>
						</div>
						<div class="w3-quarter w3-padding">
							<a href="/Invoice/ReturnWorkOrder?InvoiceId=@ViewBag.faturaid&WorkOrderId=@Model.WorkOrderId&Type=@ViewBag.isemritipi" class="w3-block w3-small w3-btn w3-ripple w3-red w3-left w3-round w3-margin-right w3-block" onclick="if (!confirm('Geri göndermek istediğinizden emin misiniz?')) return false;"> <i class="fa fa-undo" aria-hidden="true"></i> Geri Gönder </a>
						</div>


					</div>
				}

			}

		</div>
		<div class="w3-row w3-margin-bottom w3-padding">
			<div class="w3-quarter">
				<a href="/WorkOrder/" class="w3-btn w3-ripple w3-blue"><i class="fa fa-arrow-left"></i>&nbsp;Geri </a>
			</div>

			@if (!(Model.Statu == 15 || Model.Statu == 20))
			{
				if (!ViewBag.IsReadOnly)
				{
					<div class="w3-half">
						<div class="w3-third">
							&nbsp;
							&nbsp;
							<a href="/WorkOrder/AddFixingToOrder?WorkOrderId=@Model.WorkOrderId" class="w3-btn w3-ripple w3-blue" id="btnTespitler">
								<i class="fa fa-plus"></i>&nbsp; Tespitler
								@switch (Model.TaskId)
								{
									case 1:
										if (Model.KlimaFixing.Count() > 0)
										{
											<span><i class="fa fa-check-circle-o" aria-hidden="true"></i></span>
										}
										break;

									case 2:
										if (Model.EGRFixing.Count() > 0)
										{
											<span><i class="fa fa-check-circle-o" aria-hidden="true"></i></span>
										}
										break;

									case 3:
										if (Model.SanzimanFixing.Count() > 0)
										{
											<span><i class="fa fa-check-circle-o" aria-hidden="true"></i></span>
										}
										break;

									case 4:
										if (Model.TurboSarjFixing.Count() > 0)
										{
											<span><i class="fa fa-check-circle-o" aria-hidden="true"></i></span>
										}
										break;

									case 5:
										if (Model.AlternatorFixing.Count() > 0)
										{
											<span><i class="fa fa-check-circle-o" aria-hidden="true"></i></span>
										}
										break;

									case 6:
										if (Model.MarsMotorFixing.Count() > 0)
										{
											<span><i class="fa fa-check-circle-o" aria-hidden="true"></i></span>
										}
										break;

									case 7:
										if (Model.DireksiyonPompaFixing.Count() > 0)
										{
											<span><i class="fa fa-check-circle-o" aria-hidden="true"></i></span>
										}
										break;
									case 8:
										if (Model.DireksiyonMekanikFixing.Count() > 0)
										{
											<span><i class="fa fa-check-circle-o" aria-hidden="true"></i></span>
										}
										break;
									case 9:
										if (Model.DireksiyonHidrolikFixing.Count() > 0)
										{
											<span><i class="fa fa-check-circle-o" aria-hidden="true"></i></span>
										}
										break;
									case 10:
										if (Model.DpfFixing.Count() > 0)
										{
											<span><i class="fa fa-check-circle-o" aria-hidden="true"></i></span>
										}
										break;
								}



							</a>
						</div>
						<div class="w3-third">
							&nbsp;
							<a href="/WorkOrder/AddPartToOrder?WorkOrderId=@Model.WorkOrderId" class="w3-btn w3-ripple w3-blue" id="btnEklenenParcalar">
								<i class="fa fa-plus"></i>&nbsp; Parçalar
								@if (Model.WorkOrderParts.Count() > 0)
								{
									<span><i class="fa fa-check-circle-o" aria-hidden="true"></i></span>
								}
							</a>
						</div>
						<div class="w3-third">
							&nbsp;
							<a href="/WorkOrder/AddPhotoToOrder?WorkOrderId=@Model.WorkOrderId" class="w3-btn w3-ripple w3-blue" id="btnEklenenfotograflar">
								<i class="fa fa-plus"></i>&nbsp;
								Fotoğraflar
								@if (Model.WorkOrderPhotos.Count() > 0)
								{
									<span><i class="fa fa-check-circle-o" aria-hidden="true"></i></span>
								}
							</a>
						</div>

					</div>
				}
			}


		</div>


	</div>
</div>
<div id="modalApprove" class="w3-modal">
	<div class="w3-modal-content w3-margin-bottom  w3-animate-top">
		<header class="w3-container w3-red">
			<span onclick="document.getElementById('modalApprove').style.display='none'"
				  class="w3-button w3-xlarge w3-display-topright">&times;</span>
			<h2>Detay</h2>

		</header>
		@using (Html.BeginForm("IsEmriOnayaGonder", "WorkOrder"))
		{
			<div class="w3-container w3-margin-bottom">
				<p class="w3-xlarge">Açıklama yaz </p>
				<input type="hidden" name="orderApproveStatu" id="orderApproveStatu" />
				<input type="hidden" name="WorkOrderUpdateId" id="WorkOrderUpdateId" />
				<textarea name="IptalIadeAciklamasi" class="w3-input w3-border w3-round" rows="6" cols="300"></textarea>

				<button class="w3-btn w3-ripple w3-green w3-right w3-margin-bottom w3-margin-top" id="btnOnayaGonder">Onaya Gönder</button>
			</div>

		}


	</div>
</div>

<script type="text/javascript">
	function OnSuccess(data) {

		$('#mdlFaturaNo').attr("disabled", "disabled");
		$('#btnFaturaFisOlustur').attr("disabled", "disabled");

		if (data.result == true) {
			toastr.success(data.message, "İşlem Başarılı");

			$('#mdlFaturaNo').val(data.FaturaNo);

		}
		else {
			toastr.error(data.message, "İşlem Başarısız!");
		}

	}
	function OnFailure(data) {

		alert(data.result);

		alert(data.message);
	}
</script>
<div id="modalFatura" class="w3-modal">
	<div class="w3-modal-content">

		<header class="w3-container w3-teal">
			<span onclick="document.getElementById('modalFatura').style.display = 'none';location.reload();"
				  class="w3-button w3-display-topright">&times;</span>
			<h2>Fatura Kes</h2>
		</header>

		<div class="w3-container">
			@*@using (Html.BeginForm("FaturaKes", "Invoice", FormMethod.Post))*@
			@using (Ajax.BeginForm("FaturaKes", "Invoice", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
			{
				@Html.AntiForgeryToken()
				@Html.Hidden("mdlFaturaId")
				@Html.Hidden("mdlIsEmriId")
				@Html.Hidden("mdlIsEmriTipi")
				@Html.Hidden("FaturaTipi")
				<div>
					<div class="w3-row w3-padding">
						<div class="w3-padding w3-large fontDuzgun w3-center" id="FaturaMessage">

						</div>
					</div>
					<div class="w3-row w3-padding w3-hide" id="fisMessage">
						<span>Fiş numarası sistem tarafından fiş oluştur dedikten sonra oluşur</span>
					</div>
					<div class="w3-row w3-padding">
						<div class="w3-threequarter" id="divFaturaNo">
							<label id="lblFaturaFisNumarasi">Fatura Numarası</label>
							<input class="w3-input w3-border uppercase" rows="6" cols="300" name="faturaNumarasi" id="mdlFaturaNo" />
						</div>
						<div class="w3-quarter">
							<br />
							<button class="w3-btn w3-ripple w3-teal w3-right w3-block w3-border" id="btnFaturaFisOlustur">Fatura Oluştur</button>
						</div>
					</div>
				</div>
			}

		</div>

	</div>
</div>