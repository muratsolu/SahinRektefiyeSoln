@model SahinRektefiyeSoln.Models.ViewModels.Stok.StokKartıViewModel
@using Vereyon.Web;

@{
	ViewBag.Title = "StokKartiTanim";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Styles/jquery-ui.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/autonumeric@4.5.4"></script>
<script src="~/Scripts/jquery-ui.js"></script>
@Html.Action("SetPageHeader", "Admin", new { pageTitle = "Stok Kartı Tanımlama", pagePermission = "XXXXX" })

<script>
	$(document).ready(function () {

		$.widget("custom.combobox", {
			_create: function () {
				this.wrapper = $("<span>")
					//.addClass("custom-combobox")
					.css({ 'position': 'relative' })
					.css({ 'width': "auto!important" })
					.insertAfter(this.element);

				this.element.hide();
				this._createAutocomplete();
				this._createShowAllButton();
			},

			_createAutocomplete: function () {
				var selected = this.element.children(":selected"),
					value = selected.val() ? selected.text() : "";

				this.input = $("<input>")
					.appendTo(this.wrapper)
					.val(value)
					.attr("title", "")
					//.addClass("custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left")
					.addClass("w3-select w3-border w3-round w3-padding")
					.autocomplete({
						delay: 0,
						minLength: 0,
						source: $.proxy(this, "_source")
					})
					.tooltip({
						classes: {
							"ui-tooltip": "ui-state-highlight"
						}
					});

				this._on(this.input, {
					autocompleteselect: function (event, ui) {
						ui.item.option.selected = true;
						this._trigger("select", event, {
							item: ui.item.option
						});
					},

					autocompletechange: "_removeIfInvalid"
				});
			},

			_createShowAllButton: function () {
				var input = this.input,
					wasOpen = false;

				$("<a>")
					.attr("tabIndex", -1)
					.attr("title", "Tümünü Göster")
					.tooltip()
					.appendTo(this.wrapper)
					.button({
						icons: {
							primary: "ui-icon-triangle-1-s"
						},
						text: false
					})
					.css('margin-right', 3)
					.removeClass("ui-button ui-corner-all ui-widget ui-button-icon-only ")
					//.addClass("custom-combobox-toggle ui-corner-right")
					.addClass("w3-display-right")
					.on("mousedown", function () {
						wasOpen = input.autocomplete("widget").is(":visible");
					})
					.on("click", function () {
						input.trigger("focus");

						// Close if already visible
						if (wasOpen) {
							return;
						}

						// Pass empty string as value to search for, displaying all results
						input.autocomplete("search", "");
					});
			},

			_source: function (request, response) {
				var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
				response(this.element.children("option").map(function () {
					var text = $(this).text();
					if (this.value && (!request.term || matcher.test(text)))
						return {
							label: text,
							value: text,
							option: this
						};
				}));
			},

			_removeIfInvalid: function (event, ui) {

				// Selected an item, nothing to do
				if (ui.item) {
					return;
				}

				// Search for a match (case-insensitive)
				var value = this.input.val(),
					valueLowerCase = value.toLowerCase(),
					valid = false;
				this.element.children("option").each(function () {
					if ($(this).text().toLowerCase() === valueLowerCase) {
						this.selected = valid = true;
						return false;
					}
				});

				// Found a match, nothing to do
				if (valid) {
					return;
				}

				// Remove invalid value
				this.input
					.val("")
					.attr("title", value + " seçilmedi.")
					.tooltip("open");
				this.element.val("");
				this._delay(function () {
					this.input.tooltip("close").attr("title", "");
				}, 2500);
				this.input.autocomplete("instance").term = "";
			},

			_destroy: function () {
				this.wrapper.remove();
				this.element.show();
			}
		});

		$('#stok_EnAzStokAdedi').val('1');
		$('#stok_EnAzStokAdedi').html('1');

		$('#stok_EnAzSatisAdedi').val('1');
		$('#stok_EnAzSatisAdedi').html('1');

		$('#btnStokKartOlustur').click(function () {


			var parcaTipId = $('#ParcaTipId').val();
			var errorMessage = '';

			if (parcaTipId === '') {
				errorMessage += 'Parça tipini seçiniz\n';
			}

			if (parcaTipId != 3) // Eğer Sarf malzeme ise model marka seçme
			{
				if ($('#VehicleIds').val() === '') {
					errorMessage += 'Parçanın kullanıldığı marka model seçiniz\n';
				}
                if ($('#SatisBirimFiyati').val() === '0,00') {
					errorMessage += 'Satış birim fiyatı giriniz\n';
				}
			}



			if ($('#DepoIds').val() === '') {
				errorMessage += 'Parçanın duracağı depo sıra-raf-hücre seçiniz\n';
			}



			if (errorMessage != '') {
				alert(errorMessage);
				return false;
			}











			return true;

		});

		$('#stok_ParcaNo').keyup(function () {
			this.value = $.trim(this.value.toUpperCase());
		});


		$('#stok_ParcaNo').focusout(function () {

			var value = $('#stok_ParcaNo').val();
			
			var url = '@Url.Action("GetParcaNo", "Stok")';

			$.getJSON(url, { ParcaNumarasi: value }, function (response) {
				debugger;

				if (response.StokKartiId != null) {
					//alert('Girmiş olduğunuz parça numarası sistemde kayıtlıdır');
					$('#aForDuplicateParca').attr("href","/Stok/StokKartiDuzenle?StokKartiId=" + response.StokKartiId);
					$('#divForDuplicate').removeClass("w3-hide").addClass("w3-show");
				}
				else
				{
					$('#divForDuplicate').removeClass("w3-show").addClass("w3-hide");
				}
				//$("#DepoSiraId").empty();
				//$.each(response, function (index, item) {
				//	var p = new Option(item.Text, item.Value);
				//	$("#DepoSiraId").append(p);
				//});
			});


		});


		$("#ParcaTipId").combobox({
			select: function (event, ui) {
				$('#ParcaTipId').val(ui.item.value);
				$('#ParcaTipId').trigger("change");
			}
		});

		$("#DepoSiraId").combobox({
			select: function (event, ui) {
				$('#DepoSiraId').val(ui.item.value);
				$('#DepoSiraId').trigger("change");
			}
		});

		$("#CompanyId").combobox({
			select: function (event, ui) {
				$('#CompanyId').val(ui.item.value);
				$('#CompanyId').trigger("change");
			}
		});

		var url = '@Url.Action("GetStokSirasi", "Stok")';

		$.getJSON(url, { DepoSirasi: 1 }, function (response) {
			$("#DepoSiraId").empty();
			$.each(response, function (index, item) {
				var p = new Option(item.Text, item.Value);
				$("#DepoSiraId").append(p);
			});
		});

		var url = '@Url.Action("GetCompanies", "Stok")';

		$.getJSON(url, { CompanyId : 1 }, function (response) {
			$("#CompanyId").empty();
			$.each(response, function (index, item) {
				var p = new Option(item.Text, item.Value);
				$("#CompanyId").append(p);
			});
		});


		$('#btnDepoRafEkle').click(function () {
			var depoSirasi = $('#DepoSiraId').val();
			var depoRafi = $('#DepoRafId').val();
			var depoHucresi = $('#DepoHucreId').val();

			var url = '@Url.Action("GetDepoRafTanimId", "Stok")';

			$.ajax(
				{
					type: 'GET',
					url: url,
					data: "depoSirasi=" + depoSirasi + "&depoRafi=" + depoRafi + "&depoHucresi=" +depoHucresi,
					success: function (data) {
						if (data == '') {
							alert('Seçtiğiniz depo hücresi bulunamadı!');
						} else {
							var result = true;
							var prevData = $('#DepoIds').val();
							var res = prevData.split("-");

							for (i = 0; i < res.length - 1; i++) {
								if (res[i] == data) {
									result = false;
									alert('Birden çok aynı depo hücresini seçemezsiniz!');
								}
							}

							if (result) {
								data = data + '-';
								$('#DepoIds').val(prevData + data);
								$('#tableDepoRaf > tbody:last-child').append('<tr id="' + data + '"><td>' + depoSirasi + '</td><td>' + depoRafi + '</td><td>' + depoHucresi + '</td><td><button class="w3-button w3-red" onclick="onDepoRafTanimSil(this);return false;" id="' + data + '"> <i class="fa fa-times"></i>Sil</button></td></tr>');
							}
						}


					}
				}
			);

		});


		//$('#btnCompanyVehicleEkle').click(function () {
		//	var companyName = $('#CompanyId option:selected').html();
		//	var vehicleName = $('#VehicleId option:selected').html();
		//	var companyId = $('#CompanyId').val();
		//	var vehicleId = $('#VehicleId').val();
		//	if (vehicleId == ' ') {
		//		alert('Model Seçiniz!');
		//	} else {
		//		var result = true;
		//		var prevData = $('#VehicleIds').val();
		//		var res = prevData.split("-");

		//		for (i = 0; i < res.length - 1; i++) {
		//			if (res[i] == vehicleId) {
		//				result = false;
		//				alert('Birden çok aynı marka-model seçemezsiniz!');
		//			}
		//		}
		//		var data = vehicleId + '-';
		//		if (result) {
		//			//data = data + '-';
		//			$('#VehicleIds').val(prevData + vehicleId + '-');
		//			$('#tableCompanyVehicle > tbody:last-child').append('<tr id="' + data + '"><td>' + companyName + '</td><td>' + vehicleName + '</td><td><button class="w3-button w3-red" onclick="onCompanyVehicleSil(this);return false;" id="' + data + '"> <i class="fa fa-times"></i>Sil</button></td></tr>');
		//		}
		//	}
		
		//});


		$('#btnCompanyVehicleEkle').click(function () {
			var companyName = $('#CompanyId option:selected').html();
			//var vehicleName = $('#VehicleId option:selected').html();

			var companyId = $('#CompanyId').val();
			//var vehicleId = $('#VehicleId').val();

			if (companyId == ' ') {
				alert('Marka Seçiniz!');
			} else {
				var result = true;
				var prevData = $('#VehicleIds').val();
				var res = prevData.split("-");

				for (i = 0; i < res.length - 1; i++) {
					if (res[i] == companyId) {
						result = false;
						alert('Birden çok aynı marka seçemezsiniz!');
					}
				}
				var data = companyId + '-';
				if (result) {
					//data = data + '-';
					$('#VehicleIds').val(prevData + companyId + '-');
					$('#tableCompanyVehicle > tbody:last-child').append('<tr id="' + data + '"><td>' + companyName + '</td><td><button class="w3-button w3-red" onclick="onCompanyVehicleSil(this);return false;" id="' + data + '"> <i class="fa fa-times"></i>Sil</button></td></tr>');
				}
			}



		});

		$('.btnsilDepo').click(function () {
			debugger;
		});



        $("#SatisBirimFiyati").focusout(function () {
			debugger;
            var satisBirimFiyat = parseFloat(GetCurreny($(this).val()));
			var kdvOrani = parseFloat($('#Kdv').val());
			if (isNaN(kdvOrani)) {
				$('#kdvliFiyat').val('Kdv orani giriniz');
			} else {
				var kdv = parseFloat(satisBirimFiyat * kdvOrani / 100);
				var kdvli = satisBirimFiyat + kdv;
				$('#kdvliFiyat').val(kdvli.toFixed(2));
                kdvliFiyat.classList.toggle("money");
				kdvliFiyat.classList.toggle("money2");
			}


		});

		$('#Kdv').focusout(function () {
			debugger;
            var satisBirimFiyat = parseFloat(GetCurreny($('#SatisBirimFiyati').val()));
			var kdvOrani = parseFloat($('#Kdv').val());
			if (isNaN(satisBirimFiyat)) {
				$('#kdvliFiyat').val('Birim Fiyatı Giriniz');
			} else {
				var kdv = parseFloat(satisBirimFiyat * kdvOrani / 100);
				var kdvli = satisBirimFiyat + kdv;
				$('#kdvliFiyat').val(kdvli.toFixed(2));
			}
		});
	});

	function onDepoRafTanimSil(e) {
		var oncedenEklenmisIds = $('#DepoIds').val().split('-');

		var DepoRafTanimId = e.attributes.id.value.substring(0, e.attributes.id.value.length - 1);

		var silinecekIdIndex = oncedenEklenmisIds.indexOf(DepoRafTanimId);

		oncedenEklenmisIds.splice(silinecekIdIndex, 1);

		console.log(oncedenEklenmisIds);

		var yeniDepoIds = '';

		for (var i = 0; i < oncedenEklenmisIds.length-1; i++) {
			yeniDepoIds += oncedenEklenmisIds[i] + '-';
		}

		$('#DepoIds').val(yeniDepoIds);

		console.log(yeniDepoIds);

		$('#tableDepoRaf tr#' + DepoRafTanimId +'-').remove();
	}

	function onCompanyVehicleSil(e) {

		var oncedenEklenmisIds = $('#VehicleIds').val().split('-');

		var VehicleId = e.attributes.id.value.substring(0, e.attributes.id.value.length - 1);

		var silinecekIdIndex = oncedenEklenmisIds.indexOf(VehicleId);

		oncedenEklenmisIds.splice(silinecekIdIndex, 1);

		console.log(oncedenEklenmisIds);

		var yeniVehicleIds = '';

		for (var i = 0; i < oncedenEklenmisIds.length - 1; i++) {
			yeniVehicleIds += oncedenEklenmisIds[i] + '-';
		}

		$('#VehicleIds').val(yeniVehicleIds);

		console.log(yeniVehicleIds);

		$('#tableCompanyVehicle tr#' + VehicleId + '-').remove();
	}

	function onChangeDepoSirasi(){
		var url = '@Url.Action("GetStokRafi", "Stok")';

		var ODD = $("#DepoSiraId").val();

		$("#DepoRafId").attr('disabled', 'disabled');
		$("#DepoRafId").val('');
		$('#DepoRafId').trigger("change");


		$("#DepoHucreId").attr('disabled', 'disabled');
		$("#DepoHucreId").val(' ');
		$('#DepoHucreId').trigger("change");

		$.getJSON(url, { DepoSirasi: ODD , selectedId : null}, function (response) {
			$("#DepoRafId").empty();
			$.each(response, function (index, item) {
				var p = new Option(item.Text, item.Value);
				$("#DepoRafId").append(p);
			});
			$("#DepoRafId").removeAttr('disabled', 'disabled');
			$("#DepoHucreId").removeAttr('disabled', 'disabled');
		});

	}

	function onChangeDepoRafi()
	{
		var url = '@Url.Action("GetStokHucresi", "Stok")';

		var depoSirasi = $("#DepoSiraId").val();
		var depoRafi = $("#DepoRafId").val();

		$.getJSON(url, { DepoSirasi: depoSirasi, DepoRafi: depoRafi}, function (response) {
			$("#DepoHucreId").empty();
			$.each(response, function (index, item) {
				var p = new Option(item.Text, item.Value);
				$("#DepoHucreId").append(p);
			});
		});

	}

	function onChangeCompany() {
		var url = '@Url.Action("GetCompanyVehicles", "Stok")';
		$("#VehicleId").attr('disabled', 'disabled');

		var companyId = $("#CompanyId").val();

		$.getJSON(url, { CompanyId: companyId}, function (response) {
			$("#VehicleId").empty();
			$.each(response, function (index, item) {
				var p = new Option(item.Text, item.Value);
				$("#VehicleId").append(p);
			});
			$("#VehicleId").removeAttr('disabled', 'disabled');
		});
	}

</script>
<div class="w3-panel">

	<div class="w3-row-padding w3-card">
		<div class="w3-row w3-row-padding  w3-margin-top">
			@Html.RenderFlashMessages()
		</div>
		<div id="divForDuplicate" class="w3-yellow w3-hide w3-padding w3-round">
			<label>Girmiş olduğunuz parça numarası sistemde bulunmaktadır. Parçaya gitmek için <a id="aForDuplicateParca" target="_blank" href="#">tıklayınız</a></label>
		</div>
		@using (Html.BeginForm())
	{
		<div class="w3-row">
			<div class="w3-quarter w3-padding">
				<label>Parça No</label>
				@Html.EditorFor(model => model.stok.ParcaNo, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", maxlength = "20", autocomplete = "off", required = "required" } })
			</div>
			<div class="w3-quarter w3-padding">
				<label>Parça Adı</label>
				@Html.EditorFor(model => model.stok.ParcaAdi, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", maxlength = "128", autocomplete = "off", required = "required" } })
			</div>
			<div class="w3-quarter w3-padding">
				<label>Kdv</label>
				@Html.DropDownList("Kdv", ViewData["VergiOranlari"] as List<SelectListItem>, htmlAttributes: new { @class = "w3-select w3-border w3-round", required = "required" })
			</div>
		</div>
		<div class="w3-row">
			<div class="w3-quarter w3-padding">
				<label>Parça Tipi</label>
				@Html.DropDownList("ParcaTipId", (SelectList)ViewBag.ParcaTipleri, "Parça Tipi Seçiniz", htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "ParcaTipId", required = "required" })
			</div>
			<div class="w3-quarter w3-padding">
				<div class="w3-half w3-padding-right">
					<label>En Az Stok Adedi</label>
					@Html.EditorFor(model => model.stok.EnAzStokAdedi, new { htmlAttributes = new { @class = "w3-input w3-border w3-round ", maxlength = "2", autocomplete = "off", required = "required", value = "1" } })
				</div>
				<div class="w3-half">
					<label>En Az Satış Adedi</label>
					@Html.EditorFor(model => model.stok.EnAzSatisAdedi, new { htmlAttributes = new { @class = "w3-input w3-border w3-round ", maxlength = "2", autocomplete = "off", required = "required" } })
				</div>

			</div>
			<div class="w3-half w3-padding">
                <div class="w3-half w3-padding-right">
                    <label>Satış Birim Fiyatı ₺</label>
                    @*@Html.EditorFor(model => model.stok.SatisBirimFiyati, new { htmlAttributes = new { @class = "w3-input w3-border w3-round  money2", autocomplete = "off", required = "required" } })*@
                    @Html.EditorFor(model => model.stok.SatisBirimFiyati, new { htmlAttributes = new { @class = "w3-input w3-border w3-round money ", id = "SatisBirimFiyati", autocomplete = "off", required = "required" } })
                </div>
				<div class="w3-rest">
					<label>Satış Birim Fiyatı Kdv'li ₺</label>
					<input id="kdvliFiyat" class="w3-input w3-border w3-round money" autocomplete="off" disabled="disabled" />
				</div>
			</div>

		</div>

		<div class="w3-row w3-margin-bottom">
			<div class="w3-half">
				<input type="hidden" id="DepoIds" name="DepoIds" />
				<div class="w3-quarter w3-padding">
					<label>Depo Sırası</label>
					@Html.DropDownList("DepoSiraId", Enumerable.Empty<SelectListItem>(), "Depo Sırası Seçiniz", htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "DepoSiraId", @onchange = "onChangeDepoSirasi();" })
				</div>
				<div class="w3-quarter w3-padding">
					<label>Depo Rafı</label>
					@Html.DropDownList("DepoRafId", Enumerable.Empty<SelectListItem>(), "Model Rafı Seçiniz", htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "DepoRafId", @onchange = "onChangeDepoRafi();" })
				</div>
				<div class="w3-quarter w3-padding">
					<label>Depo Hücresi</label>
					@Html.DropDownList("DepoHucreId", Enumerable.Empty<SelectListItem>(), "Model Hücresi Seçiniz", htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "DepoHucreId" })
				</div>
				@*Buraya çekmece eklenecek*@
				<div class="w3-quarter w3-padding">
					<br />
					<button class="w3-btn w3-ripple w3-green w3-left" id="btnDepoRafEkle" onclick="return false;">Ekle</button>
				</div>
				<div class="w3-row w3-padding">
					<table class="w3-table-all w3-margin-top w3-margin-bottom" id="tableDepoRaf">
						<tbody>
							<tr>
								<th>Depo Sırası</th>
								<th>Depo Rafı</th>
								<th>Depo Hücresi</th>
								<th></th>
							</tr>
						</tbody>
						<tbody></tbody>
					</table>
				</div>
			</div>
			<div class="w3-half">
				<input type="hidden" id="VehicleIds" name="VehicleIds" />
				<div class="w3-quarter w3-padding">
					<label>Markalar</label>
					@*@Html.DropDownList("CompanyId", Enumerable.Empty<SelectListItem>(), "Marka Seçiniz", htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "CompanyId", @onchange = "onChangeCompany();" })*@
					@Html.DropDownList("CompanyId", Enumerable.Empty<SelectListItem>(), "Marka Seçiniz", htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "CompanyId" })
				</div>
				@*<div class="w3-quarter w3-padding">
					<label>Modeller</label>
					@Html.DropDownList("VehicleId", Enumerable.Empty<SelectListItem>(), "Model Seçiniz", htmlAttributes: new { @class = "w3-select w3-border w3-round", @Id = "VehicleId" })
				</div>*@
				<div class="w3-quarter w3-padding">
					<br />
					<button class="w3-btn w3-ripple w3-green w3-left" id="btnCompanyVehicleEkle" onclick="return false;">Ekle</button>
				</div>
				<div class="w3-row w3-padding">
					<table class="w3-table-all w3-margin-top w3-margin-bottom" id="tableCompanyVehicle">
						<tbody>
							<tr>
								<th>Marka</th>
								@*<th>Model</th>*@
								<th></th>
							</tr>
						</tbody>
						<tbody></tbody>
					</table>
				</div>
			</div>
		</div>
		<div class="w3-row w3-padding">
			<a href="/Stok/StokKartiTanimlariV2" class="w3-btn w3-ripple w3-blue w3-left">&nbsp; Geri</a>
			<button class="w3-btn w3-ripple w3-blue w3-right" id="btnStokKartOlustur"><i class="fa fa-floppy-o"></i>&nbsp; Stok Kartı Oluştur</button>
		</div>
}
	</div>
</div>
