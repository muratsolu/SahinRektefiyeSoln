@model SahinRektefiyeSoln.Models.ViewModels.StokKartiSearch.StokKartiSearchPageModel
@{
	ViewBag.Title = "StokKartiTanimlari";
	Layout = "~/Views/Shared/_Layout.cshtml";
	int i = 1;
	string Alternatifler;
}


<script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.flash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.1/js/buttons.print.min.js"></script>

<script>
    $(document).ready(function () {

		jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            'locale-compare-asc': function (a, b) {
                return a.localeCompare(b, 'cs', { sensitivity: 'case' })
            },
            'locale-compare-desc': function (a, b) {
                return b.localeCompare(a, 'cs', { sensitivity: 'case' })
            }
        })

        jQuery.fn.dataTable.ext.type.search['locale-compare'] = function (data) {
            return NeutralizeAccent(data);
        }

        function NeutralizeAccent(data) {
            return !data
                ? ''
                : typeof data === 'string'
                    ? data
                        .replace(/\n/g, ' ')
                        .replace(/[éÉěĚèêëÈÊË]/g, 'e')
                        .replace(/[šŠ]/g, 's')
                        .replace(/[čČ]/g, 'c')
                        .replace(/[řŘ]/g, 'r')
                        .replace(/[žŽ]/g, 'z')
                        .replace(/[ýÝ]/g, 'y')
                        .replace(/[áÁâàÂÀ]/g, 'a')
                        .replace(/[íÍîïÎİÏ]/g, 'i')
                        .replace(/[ťŤ]/g, 't')
                        .replace(/[ďĎ]/g, 'd')
                        .replace(/[ňŇ]/g, 'n')
                        .replace(/[óÓ]/g, 'o')
                        .replace(/[úÚůŮ]/g, 'u')
                    : data
        }

		$('#tblStokKartlari').DataTable({
			dom: 'Bfrtip',
			buttons: [
				'excelHtml5',
				'pdfHtml5'

			],
			"processing": true,
			"filter": true,
			"language": {
				"sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
				"oPaginate": { "sFirst": "İlk", "sLast": "Son", "sNext": "İleri", "sPrevious": "Geri" },
				"select": { "rows": { "_": "%d kayıt seçildi", "0": "", "1": "1 kayıt seçildi" } },
				"sSearch": "",
				"selectAll": "Tümünü Seç",
				"sSearchPlaceholder": "Filtrele",
				"sLengthMenu": "_MENU_",
				"sLoadingRecords": "Yükleniyor...",
				"sProcessing": "İşleniyor...",
				"sZeroRecords": "Eşleşen kayıt bulunamadı...",
				"sInfo": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar.",
				"sInfoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
				"sInfoEmpty": "Kayıt Yok",
				"sInfoPostFix": "",
				"sInfoThousands": ".",
				"sDecimal": ","
			},
            columnDefs : [
							 { targets: 0, type: 'locale-compare' },
						  ]
		});

		$("input[type='search']").keyup(function () {
            table.search(
                jQuery.fn.dataTable.ext.type.search.string(NeutralizeAccent(this.value))
            )
                .draw()

        });

		var btns = $('.dt-buttons')[0];

		btns.firstElementChild.className = "w3-btn w3-blue w3-round";
		btns.firstElementChild.textContent = "Excel'e Aktar";

		btns.firstElementChild.nextElementSibling.className = "w3-btn w3-blue w3-round";
		btns.firstElementChild.nextElementSibling.textContent = "Pdf'e Aktar";


	});


	$('#ParcaNo').keyup(function () {
		this.value = $.trim(this.value.toUpperCase());
	});
</script>
@Html.Action("SetPageHeader", "Admin", new { pageTitle = "Stok Kartı Arama", pagePermission = "XXXXX" })
<div class="w3-panel">
	<div class="w3-row-padding w3-card">
		@using (Html.BeginForm())
		{
			<div class="w3-row">
				<div class="w3-third w3-padding">
					<label>Parça Numarası</label>
					@Html.EditorFor(model => model.filter.ParcaNo, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", maxlength = "20", autocomplete = "off", id = "ParcaNo" } })
				</div>
				<div class="w3-rest">
					<div class="w3-quarter w3-right w3-padding">
						<br />
						<a href="/Stok/StokKartiTanim" class="w3-btn w3-ripple w3-blue w3-right"><i class="fa fa-cog fa-fw"></i> Stok Kartı Tanımla</a>
					</div>
				</div>

			</div>
			<div class="w3-row">
				<div class="w3-third w3-padding">
					<label>Parça Adı</label>
					@Html.EditorFor(model => model.filter.ParcaAdi, new { htmlAttributes = new { @class = "w3-input w3-border w3-round", maxlength = "54", autocomplete = "off" } })
				</div>
				<div class="w3-third w3-padding">
					<br />
					<button class="w3-btn w3-ripple w3-blue w3-left">Ara</button>
				</div>
			</div>

		}
		<div class="w3-row w3-padding">
			@if (Model.stokKartlari.Count() > 0)
			{
				<div class="w3-rest">
					<table class="w3-table-all w3-margin-top w3-margin-bottom" id="tblStokKartlari">
						<thead>
							<tr>
								<th>#</th>
								<th>#</th>
								<th>Sıra</th>
								<th>Parça No</th>
								<th>Alternatif</th>
								<th>Parça Adı</th>
								<th>Stok</th>
								<th>Atolte Stok</th>
								<th>Fiyat (Kdv'siz)</th>
								<th>Fiyat (Kdv'li)</th>
								<th>Ortalama Maliyet</th>
								<th>Son Maliyet</th>
								<th>Raf (Sıra-Raf-Hücre)</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var stokKarti in Model.stokKartlari)
							{
								Alternatifler = string.Empty;
								foreach (var item in stokKarti.StokKartiAlternatif.ToList())
								{
									Alternatifler += item.StokKarti1.ParcaNo + ", ";
								}
								//foreach (var item in stokKarti.StokKartiAlternatif1.ToList())
								//{
								//	Alternatifler += stokKarti. + ", ";
								//}
								<tr>
									<td>
											
												<a href="/Stok/StokKartiDuzenle?StokKartiId=@stokKarti.StokKartiId" class="w3-btn w3-ripple w3-blue"> Seç</a>
											
										
									</td>
									<td>
										<a href="/ServiceReport/YedekParcaHareket?ParcaId=@stokKarti.StokKartiId" class="w3-padding-top" title="Yedek Parça Hareket Raporu"><i class="fa fa-pencil-square-o w3-hover-opacity" aria-hidden="true"></i></a>
									</td>
									<td>@(i++)</td>
									<td>@stokKarti.ParcaNo</td>
									<td>@Alternatifler</td>
									<td>@stokKarti.ParcaAdi</td>
									<td>@stokKarti.ToplamStok</td>
									<td>@stokKarti.AtolyeStok</td>
									<td>@stokKarti.SatisBirimFiyati</td>
									<td>@(stokKarti.SatisBirimFiyati + (stokKarti.SatisBirimFiyati * stokKarti.Kdv / 100))</td>
									<td>@stokKarti.StokKartiDetay.FirstOrDefault().OrtalamaMaliyet</td>
									<td>@stokKarti.StokKartiDetay.FirstOrDefault().SonMaliyet</td>
									<td>
										@foreach (var depoRafStoklari in stokKarti.DepoRafStoklari)
										{
											<label>@depoRafStoklari.DepoRafTanim.DepoSirasi - @depoRafStoklari.DepoRafTanim.DepoRafi - @depoRafStoklari.DepoRafTanim.DepoHucresi</label><br />
										}
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			}
			else
			{
				if (Model.filter != null)
				{
					if (!string.IsNullOrEmpty(Model.filter.ParcaNo))
					{
						<div class="w3-panel w3-yellow w3-round-large">
							<h3><b>@Model.filter.ParcaNo.ToUpper() </b>Parçası Bulunamadı!</h3>
							<a class="w3-btn w3-teal w3-margin-bottom " href="/Stok/StokKartiTanim?ParcaNo=@(Model.filter.ParcaNo.Trim().ToUpper())">
								Parçayı oluşturmak için buraya tıklayın
							</a>
						</div>
					}

				}


			}
		</div>

	</div>
</div>